{"version":3,"file":"static/chunks/699-eb47246167deff1a.js","mappings":"qFAAAA,EAAAC,QAAAC,EAAA,8GGIAC,EAAkB,GAAAC,EAAAC,CAAAA,EAAUC,IFJb,CACf,4BACA,cACA,kBACA,yBACA,uEACA,eACA,iBACA,iBACA,qBACA,mBACA,kBACA,iBACA,eACA,aACA,YACA,qBACA,kBACA,iBACA,cACA,EACA,2BACA,cACA,qBACA,yBACA,uEACA,eACA,iBACA,iBACA,qBACA,mBACA,kBACA,iBACA,eACA,aACA,YACA,qBACA,kBACA,iBACA,eACA,cACA,gBACA,eACA,EACA,2CACA,kBACA,oBACA,EACA,4CACA,kBACA,oBACA,EACA,4CACA,kBACA,oBACA,EACA,6CACA,kBACA,oBACA,EACA,sCACA,kBACA,oBACA,EACA,uCACA,kBACA,oBACA,EACA,uCACA,kBACA,oBACA,EACA,wCACA,kBACA,oBACA,EACA,wCACA,qBACA,eACA,oBACA,mBACA,EACA,SACA,iBACA,EACA,QACA,iBACA,EACA,SACA,iBACA,EACA,OACA,iBACA,EACA,aACA,YACA,EACA,WACA,YACA,EACA,UACA,YACA,EACA,KACA,YACA,EACA,SACA,YACA,EACA,QACA,YACA,EACA,UACA,YACA,EACA,QACA,YACA,EACA,SACA,YACA,EACA,UACA,YACA,EACA,aACA,YACA,EACA,QACA,YACA,EACA,MACA,YACA,EACA,SACA,YACA,EACA,UACA,YACA,EACA,UACA,gBACA,kCACA,EACA,QACA,gBACA,mCACA,aACA,EACA,KACA,gBACA,kCACA,EACA,+BACA,gBACA,kCACA,EACA,wBACA,gBACA,kCACA,EACA,QACA,YACA,EACA,cACA,YACA,EACA,SACA,YACA,EACA,UACA,eACA,EACA,cACA,eACA,EACA,OACA,YACA,EACA,WACA,aACA,iBACA,EACA,UACA,YACA,EACA,MACA,iBACA,EACA,QACA,kBACA,CACA,EE1LAH,CAAAA,EAAAI,mBDFe,07EAA8sF,CCG7tF,IAAAC,EAAeL,sCCJf,IAAAM,EAAgBP,EAAQ,MAExBF,CAAAA,EAAAC,QAAAQ,EAEAA,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,MAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,MAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,KAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,MAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,MAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,QAC3BO,EAAAC,SAAmBR,EAAQ,OAC3BO,EAAAC,SAAmBR,EAAQ,QAC3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SAAA,WACArB,YAAA,YACAD,SAAA,IAEA,0BACA,CACA,EACA6D,EAAAtE,EAAAC,UAAAqE,SAAA,CACA,iBACAlE,QAAA,oDACAE,MAAA,SACA,EACAoE,MAAA,CACAtE,QAAA,0DACAY,OAAA,CACA2D,WAAA,CACAvE,QACA,iHACAE,MAAA,YACA,EACAI,YAAA,CACAN,QAAA,kBACAC,WAAA,EACA,CACA,CACA,EACA,qBACAD,QAAA,qDACAY,OAAA,CACAN,YAAA,WACA,CACA,EAEA,iBACAN,QAAA,2DACAY,OAAA,CACAN,YAAA,yBACA,CACA,EAEA,eACAN,QACA,oEACAY,OAAA,CACAN,YAAA,qCACA,CACA,EAEA,oBACAN,QACA,iEACAC,WAAA,GACAC,MAAA,aACA,EACA,cACAF,QAAA,0CACAC,WAAA,GACAC,MAAA,QACA,EACA,kBACAF,QAAA,6DACAC,WAAA,EACA,EACAH,QAAA,WACA0E,MAAA,CACAxE,QACA,iFACAE,MAAA,YACAU,OAAA,CACAN,YAAA,kCACA,CACA,EACA,mBACAN,QAAA,iDACAE,MAAA,KACA,EACAiE,WAAAA,EACAM,GAAA,CACAzE,QAAA,WACAE,MAAA,aACA,EACA,cACAF,QAAA,WACAE,MAAA,aACA,EACAwE,WAAA,CACA1E,QAAA,4CACAE,MAAA,SACA,EACAyE,QAAA,CACA,CACA3E,QAAA,mBACAC,WAAA,GACAC,MAAA,QACA,EACA,CACAF,QAAA,QACAE,MAAA,QACA,EACA,CACA0E,MAAA,CACA5E,QACA,yFACAY,OAAA,CACAiB,SAAA,kBACAvB,YAAA,OACA6D,WAAA,CACAnE,QAAA,0DACAY,OAAAuD,EAAAvD,MACA,CACA,CACA,EACAiE,OAAA,CAYA7E,QACA,wiBACAC,WAAA,GACAW,OAAA,CACAuD,WAAAA,EACAW,IAAA,CACA9E,QAAA,kCACAY,OAAA,CACAN,YAAA,iCACA,CACA,EACA,iBACAN,QAAA,WACAY,OAAA,CACAe,SAAA,CACA3B,QAAA,oBACAC,WAAA,EACA,EACAI,SAAA,uBACAC,YAAA,aACA,CACA,EACAyE,OAAA,CACA/E,QAAA,oBACAY,OAAA,CACAN,YAAA,2BACA,CACA,EACA0E,KAAA,CACAhF,QAAA,gBACAY,OAAA,CACAN,YAAA,eACA,CACA,EACAA,YACA,gFACA,CACA,EACA2E,YAAA,CACAjF,QAAA,iBACAE,MAAA,SACA,EACAgF,OAAA,oBACA,qBACAlF,QAAA,YACAC,WAAA,GACAC,MAAA,aACA,CACA,EACA,SAAAiF,EAAAC,CAAA,EACAA,EAAAA,EAAAC,MAAA,KAEA,QADAC,EAAA,GACAC,EAAA,EAAAC,EAAAJ,EAAAK,OAAuCF,EAAAC,EAAOD,IAC9CD,CAAA,CAAAF,CAAA,CAAAG,EAAA,EAAArB,CAAA,CAAAkB,CAAA,CAAAG,EAAA,EAEA,OAAAD,CACA,CACAnB,EAAAvD,OAAA,YAAAA,OAAA8E,KAAAP,EACA,mCAEAjB,CAAA,sBAAAtD,OAAA8E,KAAAP,EAAA,SACAjB,CAAA,kBAAAtD,OAAA8E,KAAAP,EAAA,WACAjB,EAAA,MAAAtD,OAAA8E,KAAAP,EACA,oOAEAjB,CAAA,gBAAAtD,OAAA8E,KAAAP,EACA,kKAEAjB,EAAA,MAAAtD,OAAA8E,KAAAP,EACA,mCAEAvF,EAAA+F,MAAAC,IAAA,gBAAAC,CAAA,EACA,WAAAA,EAAAC,MACAD,CAAAA,EAAA1B,WAAA,MAAA0B,EAAA3D,QAAA6D,MAAAhD,QAAA,QAAkE,KAElE,GACAnD,EAAAC,UAAAmG,KAAApG,EAAAC,UAAAqE,QACA,EAAGtE,EACH,CAjOAZ,EAAAC,QAAAiF,EACAA,EAAA3D,YAAA,WACA2D,EAAA1D,QAAA,yCCCA,SAAAyF,EAAArG,CAAA,EACAA,EAAAC,UAAAoG,QAAA,CACAnG,QAAA,MACAoG,UAAA,CACAlG,QAAA,aACAE,MAAA,UACA,EACAH,OAAA,oCACA,WACAC,QACA,0cACAE,MAAA,SACA,EACA,cACAF,QAAA,sBACAE,MAAA,QACA,EACA,iBACAF,QAAA,aACAE,MAAA,QACA,EACA,kBACAF,QAAA,YACAE,MAAA,QACA,EACAR,SAAA,CACAM,QAAA,aACAE,MAAA,UACA,EACAI,YAAA,QACA,CACA,CAlCAtB,EAAAC,QAAAgH,EACAA,EAAA1F,YAAA,UACA0F,EAAAzF,QAAA,kCCCA,SAAA2F,EAAAvG,CAAA,EACAA,EAAAC,UAAAsG,SAAA,CACArG,QAAA,CACAE,QAAA,MACAW,OAAA,EACA,EACAZ,OAAA,CACAC,QAAA,oCACAW,OAAA,EACA,EACA2B,SAAA,+DACA4D,UAAA,CACAlG,QAAA,aACAE,MAAA,UACA,EACA,cACAF,QAAA,2BACAE,MAAA,UACA,EACA,WACAF,QACA,8jCACAE,MAAA,SACA,EACA,cACAF,QAAA,sBACAE,MAAA,QACA,EACA,iBACAF,QAAA,aACAE,MAAA,QACA,EACA,kBACAF,QAAA,YACAE,MAAA,QACA,EACAR,SAAA,CACAM,QAAA,qBACAE,MAAA,UACA,EACAG,SAAA,wCACAC,YAAA,QACA,CACA,CA9CAtB,EAAAC,QAAAkH,EACAA,EAAA5F,YAAA,WACA4F,EAAA3F,QAAA,uCCHA,IAAA4F,EAAsBlH,EAAQ,OAI9B,SAAAmH,EAAAzG,CAAA,EACAA,EAAAF,SAAA0G,GACAxG,EAAAC,UAAAwG,OAAAzG,EAAAC,UAAAuB,OAAA,UACA,kBACApB,QAAA,aACAE,MAAA,MACAU,OAAA,CACA,kBACAZ,QACA,4HACAE,MAAA,KACA,EACAwF,KAAA9F,EAAAC,UAAAwB,OAAAiF,IAAA1F,MACA,CACA,EACAsF,UAAA,CACAlG,QAAA,SACAE,MAAA,MACAU,OAAA,CACAsF,UAAA,CACAlG,QAAA,wBACAE,MAAA,KACA,EACAwF,KAAA9F,EAAAC,UAAA0G,MACA,CACA,CACA,GACA3G,EAAAC,UAAAwG,OAAAC,IAAAtG,QACA,mGACAJ,EAAAC,UAAAyB,aACA,SACA,cACA,CACA4E,UAAAtG,EAAAC,UAAAwG,OAAA,SACA,EACAzG,EAAAC,UAAAwG,OAAAC,IAAA1F,MAAA,gBAEAhB,EAAAC,UAAAyB,aAAA,oBACA,eACAtB,QAAA,mBACAE,MAAA,kBAEA,GACAN,EAAAC,UAAAyB,aACA,SACA1B,EAAAC,UAAA2G,WAAA,eACA,CACA,cACAxG,QACA,kEACAC,WAAA,GACAC,MAAA,iBACAU,OAAAhB,EAAAC,UAAA0G,QAAA,EACA,CACA,EAEA,CA3DAvH,EAAAC,QAAAoH,EACAA,EAAA9F,YAAA,SACA8F,EAAA7F,QAAA,mCCCA,SAAAiG,EAAA7G,CAAA,EAEAA,EAAAC,UAAA4G,WAAA,CACA3G,QAAA,CACA,CACAE,QAAA,YACAC,WAAA,EACA,EACA,CACAD,QACA,uEACAC,WAAA,GACAU,OAAA,EACA,EACA,CACA2F,IAAA,CAEAtG,QAAA,mCACAC,WAAA,EACA,EACAF,OAAA,qBACA4B,SAAA,QACAvB,OAAA,8DACAC,SACA,uGACAoB,QAAA,qBACAiF,SACA,4jEACApE,SACA,kvDACAyB,QACA,ovBACA4C,OACA,iuCACAC,UACA,+bACAzG,QACA,unEACA0B,SAAA,yCACAvB,YAAA,aACA,CACA,CA5CAtB,EAAAC,QAAAwH,EACAA,EAAAlG,YAAA,aACAkG,EAAAjG,QAAA,kCCCA,SAAAqG,EAAAjH,CAAA,EACAA,EAAAC,UAAAgH,OAAA,CACA/G,QAAA,CACA,MACA,CAEAE,QACA,sEACAC,WAAA,EACA,EACA,CACA6E,IAAA,CACA9E,QAAA,mDACAC,WAAA,EACA,EACAF,OAAA,CACAC,QAAA,kCACAW,OAAA,GACAC,OAAA,CACAe,SAAA,cACA,CACA,EACAuE,UAAA,CACAlG,QAAA,oBACAC,WAAA,GACAC,MAAA,SACA,EACA2B,SAAA,cAEAF,SAAA,UACAxB,QACA,yOACAC,OAAA,kDACAqB,QAAA,sBACApB,SAAA,+CACAC,YAAA,aACA,CACA,CAxCAtB,EAAAC,QAAA4H,EACAA,EAAAtG,YAAA,SACAsG,EAAArG,QAAA,mCCCA,SAAAsG,EAAAlH,CAAA,GAEG,SAAAA,CAAA,EAMH,SAAAmH,EAAA/G,CAAA,CAAAgH,CAAA,CAAAC,CAAA,EACA,OAAAhG,OALAjB,EAAA+C,QAAA,sBAAAmE,CAAA,CAAAC,CAAA,EACA,OAAAH,CAAA,EAAAG,EAAA,GAIAF,GAAA,GACA,CACA,IAAAG,EAAA,iCAAAtE,OA0DAuE,EAAA,CAzDA,CAEA,iFACAvE,OACA,wDAAAA,OACA,qNACAA,OACA,sBAAAA,OACA,gIACAA,OACA,6BAAAA,OACA,0HACAA,OACA,+LACAA,OACA,wFACAA,OACA,mIACAA,OACA,8CAAAA,OACA,2CAAAA,OACA,yDAAAA,OACA,CAAAwE,KAAA,KACA,CAEA,qBAAAxE,OACA,eAAAA,OACA,yDAAAA,OACA,mCAAAA,OACA,sLACAA,OACA,kFACAA,OACA,CAAAwE,KAAA,KACA,CAEA,wIACAxE,OACA,uRACAA,OACA,kEAAAA,OACA,8NACAA,OACA,uFACAA,OACA,uMACAA,OACA,oKACAA,OACA,mRACAA,OACA,kIACAA,OACA,cAAAA,OACA,2NACAA,OACA,CAAAwE,KAAA,KACA,CAAAA,KAAA,IACA1H,CAAAA,EAAAC,UAAAiH,SAAA,CACAhH,QAAA,CACA,CAGAE,QACA,uFACAC,WAAA,GACAU,OAAA,EACA,EACA,CAEAX,QAAA,kCACAC,WAAA,GACAU,OAAA,EACA,EACA,CAEAX,QAAA,gBACAC,WAAA,GACAU,OAAA,EACA,EACA,CAEA4G,SAAA,CACAvH,QAAA+G,EAAA,0BAAAjE,OAAA,CAAAsE,EAAA,MACAxG,OAAA,CACAT,QAAA,MACA,CACA,EAEA,kBACAH,QAAA,4BACAC,WAAA,GACAW,OAAA,CACA,iBACAZ,QAAA,OACAE,MAAA,aACA,EACAI,YAAA,IACA,CACA,EACAP,OAAA,CACA,CAEAC,QAAA,iBACAW,OAAA,EACA,EACA,CAEAX,QAAA,sCACAW,OAAA,GACAC,OAAA,CACA0B,SAAA,CAEAtC,QACA,oGACA,CACA,CACA,EACA,CAEA2B,SAAA,gBACAF,QAAA,6BACAtB,QACA,sEACAmC,SAAA,8DAEA,oBACAtC,QAAA+G,EAAA,gBAAAjE,OAAA,CAAAuE,EAAA,MACAnH,MAAA,UACA,EACA,aACAF,QAAA+G,EAAA,uBAAAjE,OAAA,CAAAsE,EAAA,MACAlH,MAAA,SACA,EAEA2B,SAAA,CACA7B,QAAA,wCACAC,WAAA,EACA,EAEA,qBACAD,QAAA,6BACAC,WAAA,GACAC,MAAA,aACA,EACAE,OACA,2EACAC,SAAA,kCACAC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QAAA,8CACAC,WAAA,GACAU,OAAA,GACAC,OAAAsT,CACA,EACA,CACA9T,OAAA,CACA,CAEAJ,QAAA,yBACAC,WAAA,EACA,EACA,CAEAD,QAAA,yDACAC,WAAA,EACA,EACA,CAEAD,QAAA,iCACAC,WAAA,EACA,EACA,CAEAD,QAAA,iCACAC,WAAA,EACA,EACA,CAEAD,QAAA,8BACAC,WAAA,EACA,EACA,CAGAD,QACA,8DACAC,WAAA,EACA,EACA,CAEAD,QAAA,mCACAC,WAAA,EACA,EACA,CAOAD,QACA,yEACAC,WAAA,EACA,EACA,CAEAqU,OAAA,CACAtU,QACA,sEACAC,WAAA,GACAC,MAAA,SACAU,OAAA,CACAe,SAAA,OACAxB,QAAA,oBACAE,SAAA,CACAL,QAAA,6BACAC,WAAA,EACA,CACA,CACA,EACAwB,QAAA,CACAzB,QAAA,qBACAC,WAAA,EACA,EAEA,iBACAD,QAAA,wCACAC,WAAA,GACAU,OAAA,GACAT,MAAA,SACAU,OAAA,CACAR,OAAA,aACA,CACA,EACA,oBACA,CAEAJ,QAAA,0DACAC,WAAA,GACAU,OAAA,GACAT,MAAA,SACAU,OAAA,CACAR,OAAA+T,CAlHAA,EAAA,CACA/T,OAAA,cACA,GAgHAA,OAEA,yBACAJ,QAAA,0BACAC,WAAA,GACAC,MAAA,UACA,CACA,CACA,EACA,CAEAF,QAAA,6DACAC,WAAA,GACAU,OAAA,GACAT,MAAA,SACAU,OAAAuT,CACA,EACA,CAEAnU,QAAA,6CACAC,WAAA,GACAU,OAAA,GACAT,MAAA,SACAU,OAAAuT,CACA,EACA,CACA,iBACAnU,QAAA,yCACAC,WAAA,GACAC,MAAA,WACAU,OAAA,CAGAb,OAAA,CACAC,QAAA,cACAC,WAAA,EACA,CACA,CACA,EAeA,0BACA,CAEAD,QAAA,uCACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEAF,QAAA,eACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEAF,QAAA,iBACAC,WAAA,GACAC,MAAA,UACA,EACA,CACAqU,YAAA,CACAvU,QAAA,KACAC,WAAA,GACAC,MAAA,SACA,EACA,kBACAF,QAAA,KACAC,WAAA,GACAC,MAAA,UACA,EACA,qBACAF,QAAA,KACAC,WAAA,GACAC,MAAA,UACA,EACA,gBACAF,QAAA,KACAC,WAAA,GACAC,MAAA,UACA,EACA,oBAEAF,QAAA,iCACAC,WAAA,GACAC,MAAA,SACA,EACA,wBACAF,QAAA,KACAC,WAAA,GACAC,MAAA,UACA,EAyBA,6BACAF,QACA,0MACAC,WAAA,GACAC,MAAA,SACA,EACA,gBACAF,QAAA,6DACAC,WAAA,GACAU,OAAA,GACAT,MAAA,UACA,EACA,yBACAF,QAAA,uBACAC,WAAA,GACAC,MAAA,UACA,EAEA,iCACA,CAEAF,QAAA,wBACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEAF,QAAA,iBACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEA,uBACA,CAEAF,QAAA,iBACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEAF,QAAA,iBACAC,WAAA,GACAC,MAAA,UACA,EACA,CACA,eACAF,QAAA,0BACAC,WAAA,EACA,EAgBAF,OAAA,CACAC,QAAA,qBACAW,OAAA,GACAC,OAAAuT,CACA,CACA,EACAnS,EAAA,SAAAwS,CAAA,EACA,OAAAA,EAAA,IAAAzR,QAAA,4BAAoD,OACpD,EACAqR,EAAA,SAAAK,CAAA,EACA,2BAAAA,EAAAC,IAAA1S,GAAAsF,KAAA,kBACA,EAoXAiJ,OAAAnL,KAnXAiP,EAAA,CACA,kBACA,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,UACA,CACA,wBAEA,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WACA,IACA,KACA,KACA,CACA,qBACA,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,cACA,CACA,gBACA,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,YACA,GAEA5D,QAAA,SAAAkE,CAAA,EACAV,CAAA,CAAAU,EAAA,CAAA3U,QAAAoU,EAAAC,CAAA,CAAAM,EAAA,CACA,GAyNAV,EAAAM,YAAAvU,QAAAoU,EAxNA,CAEA,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YACA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YACA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,kBACA,cACA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,kBACA,EAEAxU,EAAAC,UAAAoU,OAAAA,CAEA,CA15BAjV,EAAAC,QAAAgV,EACAA,EAAA1T,YAAA,SACA0T,EAAAzT,QAAA,mCCCA,SAAAoU,EAAAhV,CAAA,EAOAA,EAAAC,UAAA,OACAC,QAAA,CACAE,QAAA,WACA,EACAD,OAAA,CACAC,QAAA,UACAW,OAAA,EACA,EACA,kBACAX,QAAA,mBACAE,MAAA,QACA,EACA,kBACAF,QAAA,OACAE,MAAA,WACA,EACAE,OAAA,MACAC,SAAA,gCACAC,YAAA,QACAqB,SAAA,QACA,gBACA3B,QAAA,YACAE,MAAA,MACA,CACA,CAEA,CApCAlB,EAAAC,QAAA2V,EACAA,EAAArU,YAAA,SACAqU,EAAApU,QAAA,mCCCA,SAAAqU,EAAAjV,CAAA,EACAA,EAAAC,SAAA,6BAAAD,EAAAC,UAAAuB,OACA,QACA,CACAtB,QAAA,SACAK,QACA,oEACAE,SAAA,wCACA,GAEA,OAAAT,EAAAC,SAAA,2CACAD,EAAAC,UAAAyB,aAAA,sCACAuS,KAAA,CACA7T,QACA,gGACAC,WAAA,GACAU,OAAA,GACAC,OAAA,CACAe,SAAA,CACA3B,QAAA,yDACAY,OAAA,CACAP,SAAA,IACAF,QAAA,OACAG,YAAA,UACA,CACA,EACAA,YAAA,IACA,CACA,EACAwU,OAAA,CAEA9U,QAAA,kDACAC,WAAA,GACAC,MAAA,UACAU,OAAA,CACAN,YAAA,GACA,CACA,CACA,EACA,CA1CAtB,EAAAC,QAAA4V,EACAA,EAAAtU,YAAA,yBACAsU,EAAArU,QAAA,mC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OAAA,CACAT,QAAA,CACAH,QACA,kEACAC,WAAA,EACA,EAEAF,OAAA,CACAC,QAAA,gBACAC,WAAA,EACA,EACA0d,WAAA,CACA3d,QAAA,yBACAC,WAAA,GACAW,OAAA,CACA,uBACAkJ,UAAA,eACAxJ,YAAA,IACA,CACA,EACA8a,QAAA,CACApb,QAAA,aACAC,WAAA,GACAC,MAAA,QACA,EACAI,YAAA,GACA,CACA,EAsBA,eACAN,QAAA,8DACAC,WAAA,GACAW,OAAA,CACAT,QAAA,CACAH,QAAA,gBACAC,WAAA,EACA,EACA6C,OAAA,CAGA,CACA9C,QAAA,yBACAC,WAAA,GACAW,OAAA,CACAgT,KAAA,YACAtT,YAAA,IACA,eACAN,QAAA,UACAE,MAAA,QACA,CACA,CACA,EAGA,CACAF,QAAA,mBACAC,WAAA,GACAW,OAAA,CACAT,QAAA,oCACA,CACA,EACA,CACA,+CACA0B,SAAA,0BACA,gBACA7B,QAAA,8CACAC,WAAA,GACAC,MAAA,YACAU,OAAA,CACAN,YAAA,IACA,CACA,EACAtB,OAAA,CACAgB,QAAA,sDACAC,WAAA,GACAW,OAAA,CACAmW,QAAA,CACA/W,QAAA,aACAC,WAAA,GACAC,MAAA,QACA,EACAI,YAAA,MACA,CACA,EACAwJ,UAAA,CACA9J,QAAA,oBACAY,OAAA,CACAN,YAAA,IACA,CACA,EACAA,YAAA,QACA,CACA,EAGAsd,KAAA,CACA5d,QAAA,yCACAC,WAAA,GACAW,OAAA,CACAN,YAAA,QACAF,OAAA,MACAD,QAAA,wBACA,CACA,CACA,CACA,CA7IAnB,EAAAC,QAAAwe,EACAA,EAAAld,YAAA,iBACAkd,EAAAjd,QAAA,mCCCA,SAAAqd,EAAAje,CAAA,EACAA,EAAAC,UAAAge,KAAA,CACA9d,OAAA,oCACA+d,UAAA,CACA9d,QACA,oHACAE,MAAA,WACAD,WAAA,EACA,EACA4B,SACA,sHACAzB,OAAA,8BACAC,SAAA,yCACAoB,QAAA,qBACAtB,QAAA,SACAG,YAAA,aACA,CACA,CApBAtB,EAAAC,QAAA4e,EACAA,EAAAtd,YAAA,OACAsd,EAAArd,QAAA,mCCCA,SAAAud,EAAAne,CAAA,EACAA,EAAAC,UAAAke,MAAAne,EAAAC,UAAAuB,OAAA,SACArB,OAAA,CACAC,QAAA,kCACAC,WAAA,GACAU,OAAA,EACA,EACA,cACAX,QACA,4EACAC,WAAA,EACA,EACAE,QACA,gZACA0B,SAAA,6BACAzB,OAAA,+CACAC,SAAA,oDACAC,YAAA,gBACAyD,QACA,iGACA,GACAnE,EAAAC,UAAAyB,aAAA,mBACA0c,WAAA,CACAhe,QACA,8EACAC,WAAA,GACAW,OAAA,CACAT,QAAA,WACA,mBACAG,YAAA,GACA,CACA,EACA2d,UAAA,CACAje,QACA,mEACAC,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,mBACAD,SAAA,IACA,CACA,EACAsD,SAAA,CACA3D,QACA,4HACA,CACA,EACA,CAlDAhB,EAAAC,QAAA8e,EACAA,EAAAxd,YAAA,QACAwd,EAAAvd,QAAA,mCCCA,SAAA0d,EAAAte,CAAA,MAEAqI,EACAlI,EAQAoe,EAcAD,EAvBAjW,EAAA,8BAAAnF,OACA/C,EAAAkB,OACA,2CAAA6B,OAAAC,QACA,MACA,WACA,OAAAkF,CACA,IAGAkW,EAAA,CACAlW,cAAA,CACAjI,QAAAiB,OAAA,0BAA6C6B,OAAAmF,GAC7ChI,WAAA,GACAW,OAAA,CACAsB,QAAA,CACAlC,QAAA,wBACAC,WAAA,GACAW,OAAA,IACA,EACAN,YAAA,WACA,CACA,CACA,EACA4d,EAAAte,EAAAC,UAAAqe,GAAA,CACApe,QAAA,MACA6D,SAAA,CACA3D,QAAAiB,OAAAlB,EAAA+C,OAAA,gBAAAA,QACA7C,WAAA,GACAU,OAAA,GACAC,OAAAud,CACA,EACApe,OAAA,CACAC,QAAAD,EACAE,WAAA,GACAU,OAAA,GACAC,OAAAud,CACA,EACAtc,SAAA,CACA7B,QAAA,uBACAC,WAAA,EACA,EACA0B,SAAA,UACA,oBACA3B,QAAA,4BACAE,MAAA,UACA,EACAC,QACA,wHACAsB,QAAA,qBACArB,OAAA,4CACAC,SAAA,CACA,CACAL,QAAA,OACAE,MAAA,MACA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AA,EACAA,EAAAC,UAAAuiB,OAAA,CACAtiB,QAAA,CACAE,QAAA,UACAW,OAAA,EACA,EACAZ,OAAA,CACAC,QAAA,0BACAW,OAAA,EACA,EACA,eACAX,QACA,4HACAW,OAAA,GACAT,MAAA,UACA,EAEA,kBACAF,QAAA,OACAE,MAAA,MACA,EACA,oBACAF,QACA,8HACAE,MAAA,MACA,EACA,gBACAF,QACA,+HACAE,MAAA,SACA,EACA,sBACAF,QAAA,6DACAE,MAAA,SACA,EACA,kBACAF,QAAA,kDACAE,MAAA,UACA,EAEAE,OAAA,0CACAC,SAAA,eACAC,YAAA,QACA,CACA,CA/CAtB,EAAAC,QAAAmjB,EACAA,EAAA7hB,YAAA,SACA6hB,EAAA5hB,QAAA,mCCCA,SAAA6hB,EAAAziB,CAAA,MA0BA0iB,CAxBA1iB,CAkFGA,EAlFHC,UAAAwiB,OAAAziB,EAAAC,UAAAuB,OAAA,SACAjB,QAAA,CAEAH,QACA,2bACAC,WAAA,EACA,EACA4B,SAAA,CACA,CACA7B,QAAA,iCACAW,OAAA,EACA,EACA,CACAX,QAAA,mCACAC,WAAA,GACAU,OAAA,EACA,EACA,CACAP,OACA,kIACAC,SACA,sGACA,GACA,OAAAT,EAAAC,UAAAwiB,MAAA,eACAC,EAAA,CACA,6BACAtiB,QAAA,aACAE,MAAA,aACA,EACAgI,WAAA,CACAlI,QAAA,UACAY,OAAAhB,EAAAC,UAAAwiB,MACA,CACA,EACAziB,EAAAC,UAAAyB,aAAA,mBAEA,kBACA,CACAtB,QAAA,2CACAE,MAAA,YACAU,OAAA,CACAqH,cAAA,CACAjI,QAAA,8BACAY,OAAA0hB,CACA,EACAviB,OAAA,SACA,CACA,EACA,CACAC,QAAA,iDACAE,MAAA,aACAU,OAAA,CACAqH,cAAA,CACAjI,QAAA,qDACAC,WAAA,GACAW,OAAA0hB,CACA,EACAviB,OAAA,SACA,CACA,EACA,CACA2B,KAAA,CAEA1B,QAAA,6CACAW,OAAA,EACA,CACA,GACA,OAAAf,EAAAC,UAAAwiB,OAAA,OACAziB,EAAAC,UAAAyB,aAAA,oBACAc,WAAA,CACA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AAA,QACA,CACA,EACA2J,MAAA,CACA,CACAjK,QACA,6EACAE,MAAA,uBAEA,CACAF,QAAA,2BACAE,MAAA,yBAEA,CACAF,QAAA,yCACAE,MAAA,oBAEA,CACAF,QAAA,yBACAE,MAAA,qBAEA,CACAF,QAAA,6CACAE,MAAA,qBAEA,CACAyD,SAAA,CACA3D,QACA,wFACAC,WAAA,EACA,EACA+lB,UAAA,CACAhmB,QAAA,oCACAC,WAAA,GACAC,MAAA,SACA,EACA4E,IAAA,oDACAqd,MAAA,CACAniB,QAAA,6DACAC,WAAA,GACAC,MAAA,KACA,EACA,cACAF,QAAA,kCACAE,MAAA,UACA,EACA,eACAF,QAAA,sCACAE,MAAA,UACA,EACA+lB,OAAA,CACAjmB,QACA,qEACAC,WAAA,GACAC,MAAA,UACA,EACAgmB,KAAA,CACAlmB,QACA,oEACAE,MAAA,UACA,EACA0O,KAAA,CACA5O,QAAA,6BACAE,MAAA,UACA,EACA,aACAF,QACA,qFACAC,WAAA,GACAU,OAAA,GACAT,MAAA,QACA,EACA8P,KAAA,CACAhQ,QAAAiB,OACA,4DAA+D6B,OAC/D,IACA,4FACAA,OACA,IACA,uKACAA,OACA,KAEA5C,MAAA,QACA,EACAimB,KAAA,CACAnmB,QACA,qEACAE,MAAA,QACA,EACAuB,QAAA,2BACArB,OAAA,CACAJ,QACA,yGACAC,WAAA,EACA,EACAI,SAAA,6BACAC,YAAA,UACA,CACA,CA1HAtB,EAAAC,QAAA6mB,EACAA,EAAAvlB,YAAA,MACAulB,EAAAtlB,QAAA,mCCCA,SAAA4lB,EAAAxmB,CAAA,EACAA,EAAAC,UAAAumB,QAAA,CACAtmB,QAAA,uCACAC,OAAA,CACAC,QAAA,kBACAY,OAAA,CACAe,SAAA,aACAgF,OAAA,6CAEAhG,OAAA,EACA,EACAP,OAAA,sCACAuG,OAAA,CACA3G,QAAA,iEACAC,WAAA,GACAW,OAAA,CACAT,QAAA,SACA,CACA,EACAkC,MAAA,CACArC,QAAA,iDACAC,WAAA,GACAC,MAAA,QACA,EACA2B,SAAA,CACA7B,QAAA,6CACAC,WAAA,EACA,E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A,sEACAC,WAAA,GACAW,OAAA,CACA+C,SAAA,wBACAtD,SAAA,IACAC,YAAA,GACA,CACA,EACA,qBACAN,QACA,4IACAC,WAAA,GACAU,OAAA,GACAC,OAAA,CACA4d,MAAA,CACAxe,QAAA,8BACAE,MAAA,UACA,EACAmC,MAAA,CACArC,QAAA,qCACAC,WAAA,GACAC,MAAA,UACA,EACA,cACAF,QAAA,OACAE,MAAA,qBAEA,CACA,EACAse,MAAA,CAMA,CAEAxe,QAAA,uDACAC,WAAA,GACAC,MAAA,UACA,EACA,CAGAF,QACA,qGACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEAF,QACA,mEACAC,WAAA,GACAC,MAAA,UACA,EACA,CAEAF,QACA,uFACAC,WAAA,GACAC,MAAA,UACA,EACA,CACAmC,MAAA,CACArC,QAAA,0CACAC,WAAA,GACAU,OAAA,GACAT,MAAA,UACA,EACAkZ,KAAA,CACApZ,QAAA,gEACAE,MAAA,QACA,EACAH,OAAA,CACAC,QAAA,cACAW,OAAA,EACA,EACAyB,WAAA,CACApC,QACA,gGACAE,MAAA,WACA,EACAC,QAAA,CAEA,CACAH,QACA,yOACAC,WAAA,GACAU,OAAA,EACA,EACA,CACAX,QACA,2KACAC,WAAA,GACAU,OAAA,EACA,EACA,CACAuE,OAAA,cACA7E,SAAA,CACAL,QAAA,gCACAC,WAAA,EACA,EACAK,YAAA,SACA,CACA,CApHAtB,EAAAC,QAAAioB,EACAA,EAAA3mB,YAAA,UACA2mB,EAAA1mB,QAAA,mCCCA,SAAA4mB,EAAAxnB,CAAA,EACAA,EAAAC,UAAAunB,MAAA,CACAtnB,QAAA,OACAK,QACA,s0BACA0H,UAAA,CACA7H,QAAA,cACAE,MAAA,UACA,EACAyB,SAAA,aACAvB,OAAA,gBACAC,SAAA,mBACAC,YAAA,uBACA,CACA,CAjBAtB,EAAAC,QAAAmoB,EACAA,EAAA7mB,YAAA,QACA6mB,EAAA5mB,QAAA,mCCCA,SAAA6mB,EAAAznB,CAAA,MAEA0nB,EAiQAC,EAAAA,EAAA,MAAAD,CA/PA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SACA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OACA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBACA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cACA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,WACA,CAeA5S,IAAA,SAAA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OAAA,EACA,EACAmoB,QAAA,CACA9oB,QACA,sHACAC,WAAA,GACAC,MAAA,QACA,EACAI,YAAA,eACA,CACA,CAhDAtB,EAAAC,QAAA2pB,EACAA,EAAAroB,YAAA,OACAqoB,EAAApoB,QAAA,mCCCA,SAAAuoB,EAAAnpB,CAAA,EACAA,EAAAC,UAAAkpB,MAAA,CACAjpB,QAAA,oCACAC,OAAA,CACAC,QAAA,mDACAW,OAAA,GACAC,OAAA,CACA,4BACA,CACA,EACAkJ,UAAA,CACA9J,QAAA,0CACAC,WAAA,EACA,EACAD,QAAA,CACAA,QACA,qHACAC,WAAA,GACAW,OAAA,CACA,gBACAZ,QAAA,qBACAE,MAAA,YACA,EACA8oB,OAAA,CACAhpB,QAAA,SACAY,OAAA,CACA,cACAZ,QAAA,kBACAE,MAAA,UACA,EACAI,YAAA,QACAD,SAAA,CACAL,QAAA,IACAE,MAAA,mBACA,CACA,CACA,CACA,CACA,EACA+oB,OAAA,CACAjpB,QAAA,iDACAE,MAAA,WACAD,WAAA,EACA,EACAE,QACA,sEACA,oBACAH,QACA,kIACAY,OAAA,CACA,yBACAZ,QAAA,mBACAE,MAAA,SACA,EACAgpB,WAAA,CACAlpB,QAAA,mCACAE,MAAA,QACA,EACA,yBACAF,QAAA,kBACAE,MAAA,SACA,EACAI,YAAA,OACA,CACA,EACA4oB,WAAA,CACAlpB,QAAA,mCACAE,MAAA,QACA,EACAG,SAAA,CACA,CACAL,QAAA,IACAE,MAAA,aACA,EACA,CACAF,QAAA,IACAE,MAAA,aACA,EACA,CACAF,QAAA,IACAE,MAAA,WACA,EACA,CACAF,QAAA,KACAE,MAAA,aACA,EACA,CACAF,QAAA,QACAE,MAAA,YACA,EACA,CACAF,QAAA,OACAE,MAAA,WACA,EACA,CACAF,QAAA,OACAE,MAAA,UACA,EACA,CACAF,QAAA,UACAE,MAAA,MACA,EACA,CACA,iBACA,CACAF,QACA,2HACAC,WAAA,GACAW,OAAA,CACA,cACAZ,QAAA,kBACAE,MAAA,UACA,EACAipB,MAAA,GACA,CACA,EACA,CACAnpB,QAAA,sBACA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mBACAS,OAAA,GACAV,WAAA,EACA,EACA,CACAD,QAAA,qCACAE,MAAA,iBACAS,OAAA,EACA,EACA,CAEAX,QAAA,sBACAC,WAAA,EACA,EACA,aACA,CAKAD,QACA,8hBACAC,WAAA,EACA,EACA,CACA,iBACAD,QAAA,qCACAC,WAAA,EACA,EACA,cACA,CACAD,QACA,qGACAW,OAAA,GACAV,WAAA,EACA,EACA,CACAD,QAAA,8BACAW,OAAA,GACAV,WAAA,EACA,EACA,CACAD,QAAA,gCACAW,OAAA,EACA,EACA,CACAX,QAAA,gCACAE,MAAA,6BACAS,OAAA,GACAV,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAN,QAAA,kCACAE,MAAA,6BACAS,OAAA,GACAC,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAN,QACA,iHACAE,MAAA,6BACAS,OAAA,GACAV,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAN,QAAA,wBACAE,MAAA,mBACAS,OAAA,EACA,EACA,CACAX,QAAA,gCACAE,MAAA,kDACAS,OAAA,GACAC,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAN,QAAA,wBACAE,MAAA,iBACAS,OAAA,EACA,EACA,CACAX,QAAA,gCACAE,MAAA,gDACAS,OAAA,GACAC,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAN,QAAA,gCACAE,MAAA,YACAS,OAAA,GACAV,WAAA,EACA,EACA,CACAD,QAAA,0CACAE,MAAA,2CACAS,OAAA,GACAV,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAN,QAAA,4CACAE,MAAA,cACAS,OAAA,GACAV,WAAA,EACA,EACA,CACAD,QAAA,oDACAE,MAAA,6CACAS,OAAA,GACAV,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAgC,SAAAA,EACAT,SAAA,CACA7B,QAAA,+CACAC,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACAqD,SAAA,CACA3D,QAAA,aACAC,WAAA,EACA,EACAG,OAAAA,EACAC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,UACA,EACAkZ,KAAA,WACA,CACA,EACA,wBACApZ,QACA,qFACAC,WAAA,EACA,EACAoB,OAAA,CACArB,QAAA,gBACAC,WAAA,GACAW,OAAAhB,EAAAC,UAAAwB,MACA,EACA0X,QAAA,CACA/Y,QAAA,kCACAC,WAAA,EACA,EAEA,gBACAD,QACA,sEACAC,WAAA,GACAW,OAAA,CACA0rB,KAAA,CACAtsB,QAAA,iBACAY,OAAA,CACAT,QAAA,kBACAG,YAAA,GACA,CACA,EACAisB,OAAA,CACAvsB,QAAA,gDACAE,MAAA,SACA,EACAwF,KAAA9F,EAAAC,UAAA2G,UACA,CACA,EACArG,QAAA,CACAH,QAAA,yDACAC,WAAA,EACA,EACAusB,MAAA,CAEA,CACAxsB,QAAA,qBACAC,WAAA,GACAW,OAAA,CACAT,QAAA,SACA0B,SAAA,oBACAvB,YAAA,QACA,CACA,EACA,CACAN,QAAA,iBACAC,WAAA,GACAW,OAAA,CACAoL,KAAA,CACAhM,QAAA,SACAE,MAAA,UACA,EACAwF,KAAA9F,EAAAC,UAAA2G,UACA,CACA,EACA,CACA2D,OAAA,CACAnK,QAAA,mDACAC,WAAA,GACAW,OAAAhB,EAAAC,UAAA2G,UACA,EACA,cACAxG,QACA,oEACAC,WAAA,EACA,EACAqG,IAAA,CACAtG,QAAA,+DACAC,WAAA,GACAW,OAAA,CACAuD,WAAA,CACA,CACAnE,QAAA,kBACAY,OAAAhB,EAAAC,UAAA2G,UACA,EACA,CACAxG,QAAA,YACAY,OAAA,CACA,cACAZ,QAAA,uCACAC,WAAA,GACAW,OAAAhB,EAAAC,UAAA2G,UACA,EACA,uCACAlG,YAAA,UACA,CACA,EACA,CACAA,YAAA,IACA,qBACA,wBACA,CACA,EACA0Y,KAAA,CACA,CACAhZ,QAAA,wBACAC,WAAA,GACAW,OAAAhB,EAAAC,UAAA2G,UACA,EACA,CACAlG,YAAA,WACA,EAyBA,QAxBA6Y,EACA,iFACArW,OACAmW,EAAA,CACA,CACA9H,OAAA,OACAoG,SAAA,MACA,EACA,CACApG,OAAA,SACAoG,SAAA,cACA,EACA,MACA,aACA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A,uBACAE,MAAA,QACA,EAYAW,EAAAI,OAAAmtB,CADAA,EAAA,eAAApsB,CAVAA,EACA,8FASAc,OAAA,KACA,IAAAsrB,GACAC,EAAA,CACAruB,QAAA,wBACAC,WAAA,GACAC,MAAA,UACA,EACAN,EAAAC,UAAA4C,MAAA,CACA,cACAzC,QAAA,kDACAC,WAAA,GACAW,OAAA,CACA,uBACAZ,QAAA,UACAC,WAAA,GACAC,MAAA,UACA,EACA,0BACAF,QAAA,UACAE,MAAA,aACA,EACAW,MAAA,CACAb,QAAAa,EACAD,OAAA,CACAoB,OAAAA,EACA,qBACAhC,QAAA,IACAE,MAAA,UACA,CACA,CACA,EACA,iBAAAiuB,EACA,WApCA,CACAnuB,QAAA,yBACAE,MAAA,YACA,EAkCA8B,OAAAA,CACA,CACA,EACA,iBAAAmsB,EACA,WA7CA,CACAnuB,QAAA,4BACAE,MAAA,YACA,EA2CAouB,cAAA,CACA,CAEAtuB,QAAA,2BACAE,MAAA,SACA,EACA,CACAF,QAAA,eACAE,MAAA,UACAU,OAAA,CACA,aAAAytB,CACA,CACA,EACA,CACAE,OAAA,CACAvuB,QAAA,kBACAE,MAAA,UACA,EACA8B,OAAAA,EACAwsB,MAAA,CACA,CAIAxuB,QACA,8EACAE,MAAA,cACAU,OAAA,CACA,aAAAytB,CACA,CACA,EACA,CACAruB,QAAA,KACAE,MAAA,aACA,EACA,CACAgpB,WAAA,CACAlpB,QAAA,kCACAE,MAAA,QACA,EACAuuB,YAAA,CACAzuB,QAAA,KACAE,MAAA,SACA,CACA,CAEA,CAvGAlB,EAAAC,QAAAwD,EACAA,EAAAlC,YAAA,QACAkC,EAAAjC,QAAA,mCCCA,SAAAkuB,EAAA9uB,CAAA,EAEAA,EAAAC,UAAA6uB,KAAA,CACA5uB,QAAA,MACA6D,SAAA,CACA3D,QACA,0EACAC,WAAA,GACAU,OAAA,EACA,EACAZ,OAAA,CACAC,QAAA,yCACAC,WAAA,GACAU,OAAA,EACA,EACAR,QACA,yEACAsB,QAAA,qBACAI,SAAA,CACA7B,QAAA,oDACAY,OAAA,CACAkJ,UAAA,mBACAxJ,YAAA,IACA,CACA,EACAF,OAAA,qCACAC,SAAA,8BACAC,YAAA,eACA,CACA,CAhCAtB,EAAAC,QAAAyvB,EACAA,EAAAnuB,YAAA,OACAmuB,EAAAluB,QAAA,mCCCA,SAAAmuB,EAAA/uB,CAAA,EACAA,EAAAC,UAAA8uB,MAAA,CACA7uB,QAAA,CACAE,QAAA,eACAC,WAAA,EACA,EACAF,OAAA,CACAC,QACA,iGACAW,OAAA,EACA,EACAkB,SAAA,qBACA8B,SACA,+lFACA2C,IAAA,uPACAnG,QACA,41BACAsB,QAAA,2BACArB,OACA,kFACAC,SACA,+EACAC,YAAA,eACA,EACAV,EAAAC,UAAA+uB,IAAAhvB,EAAAC,UAAA8uB,KACA,CA5BA3vB,EAAAC,QAAA0vB,EACAA,EAAApuB,YAAA,QACAouB,EAAAnuB,QAAA,wCCCA,SAAAkF,EAAA9F,CAAA,EACAA,EAAAC,UAAA6F,KAAA,CACApB,MAAA,CACA,CACAtE,QACA,oFACAC,WAAA,GACAW,OAAA,CACAN,YAAA,mBACA,CACA,EACA,CACAN,QACA,0FACAC,WAAA,GACAW,OAAA,CACAN,YAAA,OACA,CACA,EACA,CAEA,oBACAN,QAAA,wDACAC,WAAA,GACAW,OAAA,CACAob,aAAA,CACAhc,QAAA,oCACAE,MAAA,aACAU,OAAA,CACAN,YAAA,SACA,CACA,EACA4F,UAAA,CACAlG,QAAA,kBACAC,WAAA,GACAC,MAAA,WACAU,OAAA,CACAN,YAAA,KACA,CACA,CACA,CACA,EACA,eACA,CACAN,QAAA,4BACAC,WAAA,GACAC,MAAA,SACAU,OAAA,CACAN,YAAA,SACA,CACA,EACA,CACAN,QAAA,+CACAC,WAAA,GACAC,MAAA,SACAU,OAAA,CACAN,YAAA,OACA,CACA,EACA,CACA4F,UAAA,CACAlG,QAAA,yBACAC,WAAA,GACAC,MAAA,WACAU,OAAA,CACAN,YAAA,KACA,CACA,EACAR,QAAA,CAEAE,QACA,yEACAC,WAAA,EACA,EACAuE,MAAA,CAEA,CACAxE,QACA,gFACAY,OAAA,CACAN,YACA,sFACAsG,UAAA,IACA,CACA,EACA,CACA5G,QACA,8FACAC,WAAA,GACAW,OAAA,CACAN,YAAA,4CACAsG,UAAA,IACA,CACA,EACA,CACAnC,GAAA,CACAzE,QACA,sFACAC,WAAA,GACAC,MAAA,aACA,EACA6c,MAAA,CACA/c,QAAA,6BACAC,WAAA,GACAC,MAAA,WACA,EACA,uBACAF,QACA,mLACAC,WAAA,GACAC,MAAA,QACA,EACA,iBACAF,QAAA,4DACAY,OAAA,CACA,6BACAZ,QAAA,MACAE,MAAA,aACA,CACA,CACA,EACA,wBACAF,QACA,oFACAY,OAAA,CACA,6BACAZ,QAAA,wDACAE,MAAA,aACA,CACA,CACA,EACA,eACAF,QACA,yFACAC,WAAA,GACAC,MAAA,aACA,EACA,iBACAF,QAAA,sCACAC,WAAA,GACAW,OAAA,CACAN,YAAA,MACA,CACA,EACAuE,OAAA,CACA,CACA7E,QACA,sHACAC,WAAA,GACAW,OAAA,CACAoE,KAAA,CACAhF,QAAA,qBACAC,WAAA,EACA,EACA8E,OAAA,CACA/E,QAAA,iBACAC,WAAA,EACA,EACA,kBACAD,QAAA,iBACAC,WAAA,GACAC,MAAA,QACA,EACA2uB,KAAA,CACA7uB,QAAA,oBACAE,MAAA,WACAU,OAAA,CACAN,YAAA,OACA,CACA,EACA,oBACAN,QAAA,eACAC,WAAA,GACAC,MAAA,YACA,EACA8b,aAAA,CACAhc,QAAA,iBACAC,WAAA,GACAC,MAAA,YACA,EACAI,YAAA,cACA,CACA,EACA,CACAwuB,KAAA,CACA,CACA9uB,QAAA,4CACAE,MAAA,SACAU,OAAA,CACAN,YAAA,UACA,CACA,EACA,CACAN,QACA,wFACAE,MAAA,SACAU,OAAA,CACAN,YAAA,gBACA,CACA,EACA,CAKAA,YAAA,CACAN,QAAA,wDACAC,WAAA,EACA,CACA,CACA,CArNAjB,EAAAC,QAAAyG,EACAA,EAAAnF,YAAA,OACAmF,EAAAlF,QAAA,mCCCA,SAAAuuB,EAAAnvB,CAAA,EACAA,EAAAC,UAAAkvB,IAAA,CACAjvB,QAAA,CACAE,QAAA,MACAW,OAAA,EACA,EACAe,KAAA,CACA1B,QAAA,mCACAW,OAAA,EACA,EACAZ,OAAA,CACAC,QAAA,kCACAW,OAAA,EACA,EACA8B,MAAA,CACAzC,QACA,iFACAC,WAAA,GACAU,OAAA,EACA,EACAR,QACA,kFACA4D,QAAA,eACAtC,QAAA,qBACAuO,KAAA,wBACAmW,KAAA,wBACApD,SAAA,0CACApc,OAAA,6DACAvG,OAAA,4BACAE,YAAA,qCACAoT,UAAA,2DACA,CACA,CAnCA1U,EAAAC,QAAA8vB,EACAA,EAAAxuB,YAAA,MACAwuB,EAAAvuB,QAAA,mCCCA,SAAAwuB,EAAApvB,CAAA,EACAA,EAAAC,UAAAmvB,SAAA,CACAlvB,QAAA,MACAK,QAAA,CACAH,QACA,gFACAC,WAAA,EACA,EACAgvB,UAAA,CACAjvB,QAAA,qBACAE,MAAA,UACA,EACAyD,SAAA,qBACAoC,MAAA,CACA/F,QAAA,2BACAC,WAAA,GACAC,MAAA,YACA,EACAgvB,SAAA,CACAlvB,QAAA,eACAE,MAAA,SACA,EACAivB,SAAA,CACAnvB,QAAA,SACAC,WAAA,GACAC,MAAA,UACA,EACAI,YAAA,WACA,CACA,CAhCAtB,EAAAC,QAAA+vB,EACAA,EAAAzuB,YAAA,WACAyuB,EAAAxuB,QAAA,mCCCA,SAAA4uB,EAAAxvB,CAAA,GACG,SAAAA,CAAA,EACH,IAAAE,EAAA,CACAE,QAAA,wBACAC,WAAA,GACAU,OAAA,EACA,EACAgB,EAAA,CACA3B,QAAA,iEACAC,WAAA,GACAW,OAAA,CACAN,YAAA,eACA,CACA,EACA,SAAA+uB,EAAArjB,CAAA,CAAApL,CAAA,EACA,IAAA0uB,EAAA,GAKA,QAAA5X,KAJA4X,CAAA,oBACAtvB,QAAA,mBACAE,MAAA,SACA,EACAU,EACA0uB,CAAA,CAAA5X,EAAA,CAAA9W,CAAA,CAAA8W,EAAA,CAWA,OATA4X,EAAA,KACAtvB,QAAA,sCACAC,WAAA,GACAW,OAAA,CACAN,YAAA,OACA,CACA,EACAgvB,EAAA,SAAA3tB,EACA2tB,EAAA,QAAAxvB,EACA,CACAE,QAAAiB,OACA,wDAA6D6B,OAAAC,QAC7D,UACA,WACA,OAAAiJ,CACA,GAEA,MAEA9L,MAAA,UACAU,OAAA0uB,CACA,CACA,CACA,IAAAC,EAAA,CACAvvB,QACA,gFACAC,WAAA,GACAC,MAAA,QACA,EACAsvB,EAAA,CACAxvB,QAAA,qCACAC,WAAA,GACAC,MAAA,WACAU,OAAA,CACAe,SAAAA,CACA,CACA,EACA8tB,EAAA,CACAzvB,QAAA,6DACAC,WAAA,GACAW,OAAA,CACAe,SAAAA,CACA,CACA,CACA/B,CAAAA,EAAAC,UAAA,gBACA6vB,SAAAL,EAAA,YACAM,cAAA,CACA3vB,QACA,oFACAC,WAAA,GACAC,MAAA,QACA,EACAyD,SAAA,CACA3D,QAAA,2CACAC,WAAA,EACA,CACA,GACA2vB,UAAAP,EAAA,aACA,aAAAA,EAAA,cACA,YAAAG,EACAG,cAAAJ,EACA5rB,SAAA8rB,CACA,GACA7sB,SAAAysB,EAAA,YACA,eAAAG,EACAG,cAAAJ,EACA5rB,SAAA8rB,CACA,GACAI,MAAAR,EAAA,SACA,YAAAG,EACAG,cAAAJ,EACA5rB,SAAA8rB,CACA,GACA3vB,QAAAA,CACA,EACAF,EAAAC,UAAAiwB,MAAAlwB,EAAAC,UAAA,cACA,EAAGD,EACH,CAvGAZ,EAAAC,QAAAmwB,EACAA,EAAA7uB,YAAA,iBACA6uB,EAAA5uB,QAAA,mCCCA,SAAAwK,EAAApL,CAAA,MAiCAqI,EAgBA8nB,EAUAC,CAnDApwB,CA0LGA,EA1LHC,UAAAmL,KAAApL,EAAAC,UAAAuB,OAAA,SACAtB,QAAA,CACAE,QAAA,8BACAW,OAAA,EACA,EACA,cACAX,QACA,4EACAC,WAAA,GACAW,OAAA,CACAN,YAAA,OACA,CACA,EACAH,QACA,mSACAE,SACA,4EACAC,YAAA,cACA,GACAV,EAAAC,UAAAyB,aAAA,mBACA,gBACAtB,QAAA,KACAE,MAAA,aACA,CACA,GACA+H,EAAA,CACAjI,QAAA,oDACAC,WAAA,GACAW,OAAA,CACAsB,QAAA,CACAlC,QAAA,uBACAC,WAAA,GACAW,OAAAhB,EAAAC,UAAAmL,IACA,EACAtC,UAAA,CACA1I,QAAA,WACAE,MAAA,aACA,CACA,CACA,EACA,OAAAN,EAAAC,UAAAmL,KAAAnJ,SACAkuB,EACA,MACA,CACA,oDAAwBjtB,OACxB,sDAAAA,OACA,sDAA4DA,OAC5D,0DAAAA,OACA,kDAAAA,OACA,CAAAwE,KAAA,KACA,IACA0oB,EACA,sEACAltB,OACAlD,EAAAC,UAAAyB,aAAA,kBACA,iBACA,CACAtB,QAAAiB,OACA,KAAA6B,OAAAitB,EAAA,mBAA+DjtB,QAE/DnC,OAAA,GACAC,OAAA,CACAqH,cAAAA,EACAxF,MAAA,SACA,CACA,EACA,CACAzC,QACA,iGACAC,WAAA,GACAU,OAAA,GACAC,OAAA,CACAqH,cAAAA,EACAxF,MAAA,SACA,CACA,EACA,CACAd,SAAA,+BACAgF,OAAA,CACA,CACA3G,QAAAiB,OAAA,YAAA6B,OAAAktB,GACA/vB,WAAA,GACAU,OAAA,EACA,EACA,CACAX,QAAAiB,OACA,oBAAoB6B,OAAAktB,EAAA,aAAAltB,QAEpB7C,WAAA,GACAU,OAAA,EACA,EACA,CACA,qBACAX,QAAA,gCACAC,WAAA,GACAW,OAAA,CACAiB,SAAA,SACA1B,QAAA,UACA,oBACAG,YAAA,IACA,CACA,CACA,GACAV,EAAAC,UAAAyB,aAAA,iBACA,kBACA,CACAtB,QAAAiB,OAAA,cAAA6B,OAAAitB,GACApvB,OAAA,GACAC,OAAA,CACAqH,cAAAA,EACAlI,OAAA,SACA,CACA,EACA,CACAC,QACA,oEACAW,OAAA,GACAC,OAAA,CACAqH,cAAAA,EACAlI,OAAA,SACA,CACA,EACA,CACAC,QAAA,kDACAE,MAAA,iBACAS,OAAA,GACAC,OAAA,CACA8H,UAAA,CACA1I,QAAA,kCACAY,OAAA,CACA+F,OAAA,QACArG,YAAA,UACA,CACA,EACA2H,cAAAA,EACAlI,OAAA,SACA,CACA,EACA,CACAC,QAAA,oDACAE,MAAA,iBACAS,OAAA,GACAC,OAAA,CACA8H,UAAA,CACA1I,QAAA,oCACAY,OAAA,CACA+F,OAAA,QACArG,YAAA,cACA,CACA,EACAP,OAAA,SACA,CACA,EAC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a,CAAA,EAEAA,EAAAC,UAAAua,IAAA,CACA3L,OAAA,CACAzO,QAAA,wBACAW,OAAA,GACAC,OAAA,CACA,uBACA,CACA,EACAyW,SAAA,CACArX,QAAA,6BACAY,OAAA,CACA,yBACA,CACA,EACAs2B,MAAA,CACAl3B,QAAA,8BACAY,OAAA,CACA,mBACAZ,QAAA,MACAW,OAAA,EACA,EACA,wBACAw2B,KAAA,CACAn3B,QAAA,eACAY,OAAA,CACA+R,IAAA,SACA5M,MAAA,CACA/F,QAAA,cACAC,WAAA,EACA,CACA,CACA,CACA,CACA,EACAm3B,UAAA,CACAp3B,QAAAiB,OACA,QAAA6B,OACA,+BAA+BA,OAC/B,OACA,kEACAA,MAAA,EACA,IACA,wBAA8BA,OAC9B,IACA,YAAAA,OACA,KAEAlC,OAAA,CACA,8BACA,qBACAZ,QAAA,2BACAY,OAAA,CACA,2BACA,qCACA,CACA,EACA,gBACAZ,QAAA,QACAY,OAAA,CACA,sBACAy2B,KAAA,MACA,CACA,EACAxoB,KAAA,CACA7O,QAAA,UACAY,OAAA,CACA,cACAZ,QAAA,gBACAY,OAAA,CACA,iCACA,yBACA,yBACA,CACA,EACA,eACA,+DACA,CACA,CACA,CACA,EACAiT,KAAA,CACA7T,QAAA,6BACAY,OAAA,CACA,qBACA,CACA,CACA,EACAhB,EAAAC,UAAAiF,IAAAlF,EAAAC,UAAAua,GACA,CA7FApb,EAAAC,QAAAmb,EACAA,EAAA7Z,YAAA,MACA6Z,EAAA5Z,QAAA,wCCCA,SAAA82B,EAAA13B,CAAA,MAEA+tB,EAAAA,EAAA,CACA3tB,QAAA,UACAY,OAAA,IACA,EACAhB,EAAAC,UAAAy3B,EAAA13B,EAAAC,UAAAuB,OAAA,SACArB,OAAA,CACAC,QAAA,mDACAE,MAAA,gBACAS,OAAA,GACAC,OAAA,CACAqH,cAAA,CACAjI,QACA,sFACAC,WAAA,GACAW,OAAA,CACA,0BACAZ,QAAA,gBACAE,MAAA,UACA,EACA,6BACAF,QAAA,YACAE,MAAA,aACA,EACA,2BAAAytB,CACA,CACA,CACA,CACA,EACA,cACA3tB,QAAA,mDACAC,WAAA,EACA,EACAE,QACA,sRACAC,OACA,4GACAC,SACA,8FACA0D,QACA,mIACA,GACA4pB,EAAA/sB,OAAAhB,EAAAC,UAAAy3B,EACA13B,EAAAC,UAAAyB,aAAA,cACAI,KAAA,CACA1B,QAAA,yBAEAE,MAAA,MACA,CACA,GACAN,EAAAC,UAAAyB,aAAA,gBACAoJ,UAAA,CACA1K,QACA,+GACAC,WAAA,GACAC,MAAA,aACAU,OAAA,CACAN,YAAA,SACAH,QAAA,KACA,CACA,EACA0K,QAAA,CACA7K,QAAA,qBACAY,OAAA,CACAN,YAAA,OACA,kBACA,CACA,CACA,GACAV,EAAAC,UAAAyB,aAAA,gBACA,oBAEAtB,QAAA,sBACAY,OAAA,CACAiB,SAAA,OACAgJ,QAAA,CACA7K,QAAA,QACAY,OAAAhB,EAAAC,UAAAy3B,EAAAzsB,QAAAjK,MACA,CACA,CACA,CACA,EAEA,CAvFA5B,EAAAC,QAAAq4B,EACAA,EAAA/2B,YAAA,IACA+2B,EAAA92B,QAAA,mCCCA,SAAA+2B,EAAA33B,CAAA,EACAA,EAAAC,UAAA03B,KAAA33B,EAAAC,UAAAuB,OAAA,SAEA,cACA,CAEApB,QAAA,kDACAY,OAAA,CACAN,YAAA,IACA,CACA,EACA,CAEAN,QAAA,2BACAC,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CAEAN,QACA,0EACAC,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CAEAN,QACA,oFACAC,WAAA,GACAW,OAAA,CACAN,YAAA,IACA,CACA,EACA,CACAH,QACA,4kBACA0B,SAAA,iBACAzB,OACA,2EACAC,SACA,oEACAC,YAAA,gBACAgC,SAAA,gBACA,GACA1C,EAAAC,UAAAyB,aAAA,iBACA,cACAtB,QAAA,iBACAW,OAAA,GACAT,MAAA,QACA,EACA,mBACAF,QAAA,cACAW,OAAA,GACAC,OAAA,CACAqH,cAAA,CACAjI,QAAA,8BACAY,OAAA,CACA8H,UAAA,CACA1I,QAAA,aACAE,MAAA,aACA,EACAwF,KAAA9F,EAAAC,UAAA03B,IACA,CA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,EACAA,EAAAC,UAAAw4B,KAAAz4B,EAAAC,UAAAuB,OAAA,UACA,iBACApB,QAAA,4BACAC,WAAA,GACAC,MAAA,SACA,EACA0kB,QAAA,CACA5kB,QAAA,sBACAY,OAAA,CACAN,YAAA,UACAsG,UAAA,IACA,CACA,EACA0xB,SAAA,CAEAt4B,QAAA,gBACAY,OAAA,CACA,eACAZ,QAAA,mBACAC,WAAA,GACAC,MAAA,mBAEA8E,KAAA,CACAhF,QAAA,8BACAC,WAAA,EACA,EACA8E,OAAA,CACA/E,QAAA,6BACAC,WAAA,EACA,EACAK,YAAA,WACA,CACA,EACAmE,GAAA,CACAzE,QAAA,UACAE,MAAA,aACA,EACA4E,IAAA,CACA,iEACA,sBACA,CACAnD,SAAA,CACA,aAEA,gBACA,cACA,CACAgF,OAAA,yBAAoC,CAKpC,aACA3G,QAAA,qCACAC,WAAA,GACAW,OAAA,CACA,aACAZ,QAAA,MACAE,MAAA,aACA,EACAwF,KAAA9F,EAAAC,UAAAwB,OAAA,IAAAT,MACA,CACA,EACAN,YAAA,sCACA,GACAV,EAAAC,UAAAyB,aAAA,cAEAi3B,OAAA,CACAv4B,QAAA,8CACAY,OAAA,CACA0F,IAAA,CACAtG,QAAA,4DACAY,OAAAhB,EAAAC,UAAAwB,OAAA,IAAAT,MACA,CACA,CACA,CACA,EACA,CAjFA5B,EAAAC,QAAAo5B,EACAA,EAAA93B,YAAA,OACA83B,EAAA73B,QAAA,mCCCA,SAAAg4B,EAAA54B,CAAA,EACAA,EAAAC,UAAA24B,QAAA,CAEA14B,QAAA,0DACAC,OAAA,CACAC,QAAA,wBACAW,OAAA,EACA,EACAR,QACA,4HACAojB,QAAA,CACAvjB,QAAA,aACAE,MAAA,YACA,EACAu4B,MAAA,CACAz4B,QAAA,WACAE,MAAA,OACA,EACA,mBACAF,QAAA,QACAE,MAAA,UACA,EACAuB,QAAA,qBACArB,OACA,iGACAC,SACA,6IACAC,YAAA,eACA,EACAV,EAAAC,UAAA64B,YAAA94B,EAAAC,UAAA24B,QACA54B,EAAAC,UAAA84B,GAAA/4B,EAAAC,UAAA24B,QACA54B,EAA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","sources":["webpack://_N_E/./node_modules/.pnpm/next@13.4.5_react-dom@18.2.0_react@18.2.0/node_modules/next/router.js","webpack://_N_E/./node_modules/.pnpm/react-syntax-highlighter@15.5.0_react@18.2.0/node_modules/react-syntax-highlighter/dist/esm/styles/prism/prism.js","webpack://_N_E/./node_modules/.pnpm/react-syntax-highlighter@15.5.0_react@18.2.0/node_modules/react-syntax-highlighter/dist/esm/languages/prism/supported-languages.js","webpack://_N_E/./node_modules/.pnpm/react-syntax-highlighter@15.5.0_react@18.2.0/node_modules/react-syntax-highlighter/dist/esm/prism.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/index.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/abap.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/abnf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/actionscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ada.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/agda.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/al.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/antlr4.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/apacheconf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/apex.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/apl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/applescript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/aql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/arduino.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/arff.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/asciidoc.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/asm6502.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/asmatmel.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/aspnet.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/autohotkey.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/autoit.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/avisynth.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/avro-idl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/basic.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/batch.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/bbcode.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/bicep.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/birb.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/bison.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/bnf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/brainfuck.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/brightscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/bro.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/bsl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/c.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cfscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/chaiscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cil.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/clojure.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cmake.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cobol.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/coffeescript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/concurnas.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/coq.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cpp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/crystal.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/csharp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cshtml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/csp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/css-extras.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/csv.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/cypher.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/d.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/dart.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/dataweave.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/dax.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/dhall.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/diff.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/django.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/dns-zone-file.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/docker.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/dot.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ebnf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/editorconfig.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/eiffel.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ejs.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/elixir.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/elm.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/erb.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/erlang.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/etlua.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/excel-formula.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/factor.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/false.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/firestore-security-rules.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/flow.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/fortran.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/fsharp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ftl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gap.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gcode.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gdscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gedcom.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gherkin.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/git.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/glsl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/gn.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/go-module.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/go.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/graphql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/groovy.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/haml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/handlebars.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/haskell.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/haxe.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/hcl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/hlsl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/hoon.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/hpkp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/hsts.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/http.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ichigojam.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/icon.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/icu-message-format.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/idris.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/iecst.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ignore.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/inform7.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ini.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/io.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/j.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/java.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/javadoc.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/javadoclike.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/javastacktrace.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jexl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jolie.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jq.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/js-extras.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/js-templates.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jsdoc.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/json5.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jsonp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/jsstacktrace.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/julia.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/keepalived.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/keyman.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/kotlin.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/kumir.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/kusto.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/latex.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/latte.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/less.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/lilypond.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/liquid.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/lisp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/livescript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/llvm.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/log.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/lolcode.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/lua.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/magma.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/makefile.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/markup-templating.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/matlab.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/maxscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/mel.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/mermaid.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/mizar.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/mongodb.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/monkey.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/moonscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/n1ql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/n4js.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nand2tetris-hdl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/naniscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nasm.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/neon.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nevod.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nginx.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nim.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nix.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/nsis.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/objectivec.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ocaml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/opencl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/openqasm.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/oz.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/parigp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/parser.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/pascal.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/pascaligo.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/pcaxis.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/peoplecode.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/perl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/php-extras.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/php.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/phpdoc.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/plsql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/powerquery.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/powershell.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/processing.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/prolog.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/promql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/properties.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/protobuf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/psl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/pug.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/puppet.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/pure.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/purebasic.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/purescript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/python.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/q.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/qml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/qore.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/qsharp.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/r.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/racket.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/reason.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/regex.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/rego.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/renpy.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/rest.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/rip.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/roboconf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/robotframework.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/ruby.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/rust.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/sas.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/sass.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/scala.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/scheme.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/shell-session.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/smali.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/smalltalk.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/smarty.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/sml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/solidity.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/solution-file.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/soy.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/sparql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/splunk-spl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/sqf.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/sql.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/squirrel.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/stan.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/stylus.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/swift.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/systemd.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/t4-cs.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/t4-templating.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/t4-vb.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/tap.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/tcl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/textile.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/toml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/tremor.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/tt2.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/turtle.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/twig.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/typoscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/unrealscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/uorazor.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/uri.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/v.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/vala.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/vbnet.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/velocity.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/verilog.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/vhdl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/vim.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/visual-basic.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/warpscript.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/wasm.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/web-idl.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/wiki.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/wolfram.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/wren.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/xeora.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/xml-doc.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/xojo.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/xquery.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/yaml.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/yang.js","webpack://_N_E/./node_modules/.pnpm/refractor@3.6.0/node_modules/refractor/lang/zig.js","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require('./dist/client/router')\n","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"none\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"#f5f2f0\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#f5f2f0\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\",\n    \"whiteSpace\": \"normal\"\n  },\n  \"comment\": {\n    \"color\": \"slategray\"\n  },\n  \"prolog\": {\n    \"color\": \"slategray\"\n  },\n  \"doctype\": {\n    \"color\": \"slategray\"\n  },\n  \"cdata\": {\n    \"color\": \"slategray\"\n  },\n  \"punctuation\": {\n    \"color\": \"#999\"\n  },\n  \"namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"property\": {\n    \"color\": \"#905\"\n  },\n  \"tag\": {\n    \"color\": \"#905\"\n  },\n  \"boolean\": {\n    \"color\": \"#905\"\n  },\n  \"number\": {\n    \"color\": \"#905\"\n  },\n  \"constant\": {\n    \"color\": \"#905\"\n  },\n  \"symbol\": {\n    \"color\": \"#905\"\n  },\n  \"deleted\": {\n    \"color\": \"#905\"\n  },\n  \"selector\": {\n    \"color\": \"#690\"\n  },\n  \"attr-name\": {\n    \"color\": \"#690\"\n  },\n  \"string\": {\n    \"color\": \"#690\"\n  },\n  \"char\": {\n    \"color\": \"#690\"\n  },\n  \"builtin\": {\n    \"color\": \"#690\"\n  },\n  \"inserted\": {\n    \"color\": \"#690\"\n  },\n  \"operator\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"entity\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\",\n    \"cursor\": \"help\"\n  },\n  \"url\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".language-css .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".style .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"atrule\": {\n    \"color\": \"#07a\"\n  },\n  \"attr-value\": {\n    \"color\": \"#07a\"\n  },\n  \"keyword\": {\n    \"color\": \"#07a\"\n  },\n  \"function\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"class-name\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"regex\": {\n    \"color\": \"#e90\"\n  },\n  \"important\": {\n    \"color\": \"#e90\",\n    \"fontWeight\": \"bold\"\n  },\n  \"variable\": {\n    \"color\": \"#e90\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  }\n};","//\n// This file has been auto-generated by the `npm run build-languages-prism` task\n//\nexport default ['abap', 'abnf', 'actionscript', 'ada', 'agda', 'al', 'antlr4', 'apacheconf', 'apex', 'apl', 'applescript', 'aql', 'arduino', 'arff', 'asciidoc', 'asm6502', 'asmatmel', 'aspnet', 'autohotkey', 'autoit', 'avisynth', 'avro-idl', 'bash', 'basic', 'batch', 'bbcode', 'bicep', 'birb', 'bison', 'bnf', 'brainfuck', 'brightscript', 'bro', 'bsl', 'c', 'cfscript', 'chaiscript', 'cil', 'clike', 'clojure', 'cmake', 'cobol', 'coffeescript', 'concurnas', 'coq', 'cpp', 'crystal', 'csharp', 'cshtml', 'csp', 'css-extras', 'css', 'csv', 'cypher', 'd', 'dart', 'dataweave', 'dax', 'dhall', 'diff', 'django', 'dns-zone-file', 'docker', 'dot', 'ebnf', 'editorconfig', 'eiffel', 'ejs', 'elixir', 'elm', 'erb', 'erlang', 'etlua', 'excel-formula', 'factor', 'false', 'firestore-security-rules', 'flow', 'fortran', 'fsharp', 'ftl', 'gap', 'gcode', 'gdscript', 'gedcom', 'gherkin', 'git', 'glsl', 'gml', 'gn', 'go-module', 'go', 'graphql', 'groovy', 'haml', 'handlebars', 'haskell', 'haxe', 'hcl', 'hlsl', 'hoon', 'hpkp', 'hsts', 'http', 'ichigojam', 'icon', 'icu-message-format', 'idris', 'iecst', 'ignore', 'inform7', 'ini', 'io', 'j', 'java', 'javadoc', 'javadoclike', 'javascript', 'javastacktrace', 'jexl', 'jolie', 'jq', 'js-extras', 'js-templates', 'jsdoc', 'json', 'json5', 'jsonp', 'jsstacktrace', 'jsx', 'julia', 'keepalived', 'keyman', 'kotlin', 'kumir', 'kusto', 'latex', 'latte', 'less', 'lilypond', 'liquid', 'lisp', 'livescript', 'llvm', 'log', 'lolcode', 'lua', 'magma', 'makefile', 'markdown', 'markup-templating', 'markup', 'matlab', 'maxscript', 'mel', 'mermaid', 'mizar', 'mongodb', 'monkey', 'moonscript', 'n1ql', 'n4js', 'nand2tetris-hdl', 'naniscript', 'nasm', 'neon', 'nevod', 'nginx', 'nim', 'nix', 'nsis', 'objectivec', 'ocaml', 'opencl', 'openqasm', 'oz', 'parigp', 'parser', 'pascal', 'pascaligo', 'pcaxis', 'peoplecode', 'perl', 'php-extras', 'php', 'phpdoc', 'plsql', 'powerquery', 'powershell', 'processing', 'prolog', 'promql', 'properties', 'protobuf', 'psl', 'pug', 'puppet', 'pure', 'purebasic', 'purescript', 'python', 'q', 'qml', 'qore', 'qsharp', 'r', 'racket', 'reason', 'regex', 'rego', 'renpy', 'rest', 'rip', 'roboconf', 'robotframework', 'ruby', 'rust', 'sas', 'sass', 'scala', 'scheme', 'scss', 'shell-session', 'smali', 'smalltalk', 'smarty', 'sml', 'solidity', 'solution-file', 'soy', 'sparql', 'splunk-spl', 'sqf', 'sql', 'squirrel', 'stan', 'stylus', 'swift', 'systemd', 't4-cs', 't4-templating', 't4-vb', 'tap', 'tcl', 'textile', 'toml', 'tremor', 'tsx', 'tt2', 'turtle', 'twig', 'typescript', 'typoscript', 'unrealscript', 'uorazor', 'uri', 'v', 'vala', 'vbnet', 'velocity', 'verilog', 'vhdl', 'vim', 'visual-basic', 'warpscript', 'wasm', 'web-idl', 'wiki', 'wolfram', 'wren', 'xeora', 'xml-doc', 'xojo', 'xquery', 'yaml', 'yang', 'zig'];","import highlight from './highlight';\nimport defaultStyle from './styles/prism/prism';\nimport refractor from 'refractor';\nimport supportedLanguages from './languages/prism/supported-languages';\nvar highlighter = highlight(refractor, defaultStyle);\nhighlighter.supportedLanguages = supportedLanguages;\nexport default highlighter;","'use strict'\n\nvar refractor = require('./core.js')\n\nmodule.exports = refractor\n\nrefractor.register(require('./lang/abap.js'))\nrefractor.register(require('./lang/abnf.js'))\nrefractor.register(require('./lang/actionscript.js'))\nrefractor.register(require('./lang/ada.js'))\nrefractor.register(require('./lang/agda.js'))\nrefractor.register(require('./lang/al.js'))\nrefractor.register(require('./lang/antlr4.js'))\nrefractor.register(require('./lang/apacheconf.js'))\nrefractor.register(require('./lang/apex.js'))\nrefractor.register(require('./lang/apl.js'))\nrefractor.register(require('./lang/applescript.js'))\nrefractor.register(require('./lang/aql.js'))\nrefractor.register(require('./lang/arduino.js'))\nrefractor.register(require('./lang/arff.js'))\nrefractor.register(require('./lang/asciidoc.js'))\nrefractor.register(require('./lang/asm6502.js'))\nrefractor.register(require('./lang/asmatmel.js'))\nrefractor.register(require('./lang/aspnet.js'))\nrefractor.register(require('./lang/autohotkey.js'))\nrefractor.register(require('./lang/autoit.js'))\nrefractor.register(require('./lang/avisynth.js'))\nrefractor.register(require('./lang/avro-idl.js'))\nrefractor.register(require('./lang/bash.js'))\nrefractor.register(require('./lang/basic.js'))\nrefractor.register(require('./lang/batch.js'))\nrefractor.register(require('./lang/bbcode.js'))\nrefractor.register(require('./lang/bicep.js'))\nrefractor.register(require('./lang/birb.js'))\nrefractor.register(require('./lang/bison.js'))\nrefractor.register(require('./lang/bnf.js'))\nrefractor.register(require('./lang/brainfuck.js'))\nrefractor.register(require('./lang/brightscript.js'))\nrefractor.register(require('./lang/bro.js'))\nrefractor.register(require('./lang/bsl.js'))\nrefractor.register(require('./lang/c.js'))\nrefractor.register(require('./lang/cfscript.js'))\nrefractor.register(require('./lang/chaiscript.js'))\nrefractor.register(require('./lang/cil.js'))\nrefractor.register(require('./lang/clojure.js'))\nrefractor.register(require('./lang/cmake.js'))\nrefractor.register(require('./lang/cobol.js'))\nrefractor.register(require('./lang/coffeescript.js'))\nrefractor.register(require('./lang/concurnas.js'))\nrefractor.register(require('./lang/coq.js'))\nrefractor.register(require('./lang/cpp.js'))\nrefractor.register(require('./lang/crystal.js'))\nrefractor.register(require('./lang/csharp.js'))\nrefractor.register(require('./lang/cshtml.js'))\nrefractor.register(require('./lang/csp.js'))\nrefractor.register(require('./lang/css-extras.js'))\nrefractor.register(require('./lang/csv.js'))\nrefractor.register(require('./lang/cypher.js'))\nrefractor.register(require('./lang/d.js'))\nrefractor.register(require('./lang/dart.js'))\nrefractor.register(require('./lang/dataweave.js'))\nrefractor.register(require('./lang/dax.js'))\nrefractor.register(require('./lang/dhall.js'))\nrefractor.register(require('./lang/diff.js'))\nrefractor.register(require('./lang/django.js'))\nrefractor.register(require('./lang/dns-zone-file.js'))\nrefractor.register(require('./lang/docker.js'))\nrefractor.register(require('./lang/dot.js'))\nrefractor.register(require('./lang/ebnf.js'))\nrefractor.register(require('./lang/editorconfig.js'))\nrefractor.register(require('./lang/eiffel.js'))\nrefractor.register(require('./lang/ejs.js'))\nrefractor.register(require('./lang/elixir.js'))\nrefractor.register(require('./lang/elm.js'))\nrefractor.register(require('./lang/erb.js'))\nrefractor.register(require('./lang/erlang.js'))\nrefractor.register(require('./lang/etlua.js'))\nrefractor.register(require('./lang/excel-formula.js'))\nrefractor.register(require('./lang/factor.js'))\nrefractor.register(require('./lang/false.js'))\nrefractor.register(require('./lang/firestore-security-rules.js'))\nrefractor.register(require('./lang/flow.js'))\nrefractor.register(require('./lang/fortran.js'))\nrefractor.register(require('./lang/fsharp.js'))\nrefractor.register(require('./lang/ftl.js'))\nrefractor.register(require('./lang/gap.js'))\nrefractor.register(require('./lang/gcode.js'))\nrefractor.register(require('./lang/gdscript.js'))\nrefractor.register(require('./lang/gedcom.js'))\nrefractor.register(require('./lang/gherkin.js'))\nrefractor.register(require('./lang/git.js'))\nrefractor.register(require('./lang/glsl.js'))\nrefractor.register(require('./lang/gml.js'))\nrefractor.register(require('./lang/gn.js'))\nrefractor.register(require('./lang/go-module.js'))\nrefractor.register(require('./lang/go.js'))\nrefractor.register(require('./lang/graphql.js'))\nrefractor.register(require('./lang/groovy.js'))\nrefractor.register(require('./lang/haml.js'))\nrefractor.register(require('./lang/handlebars.js'))\nrefractor.register(require('./lang/haskell.js'))\nrefractor.register(require('./lang/haxe.js'))\nrefractor.register(require('./lang/hcl.js'))\nrefractor.register(require('./lang/hlsl.js'))\nrefractor.register(require('./lang/hoon.js'))\nrefractor.register(require('./lang/hpkp.js'))\nrefractor.register(require('./lang/hsts.js'))\nrefractor.register(require('./lang/http.js'))\nrefractor.register(require('./lang/ichigojam.js'))\nrefractor.register(require('./lang/icon.js'))\nrefractor.register(require('./lang/icu-message-format.js'))\nrefractor.register(require('./lang/idris.js'))\nrefractor.register(require('./lang/iecst.js'))\nrefractor.register(require('./lang/ignore.js'))\nrefractor.register(require('./lang/inform7.js'))\nrefractor.register(require('./lang/ini.js'))\nrefractor.register(require('./lang/io.js'))\nrefractor.register(require('./lang/j.js'))\nrefractor.register(require('./lang/java.js'))\nrefractor.register(require('./lang/javadoc.js'))\nrefractor.register(require('./lang/javadoclike.js'))\nrefractor.register(require('./lang/javastacktrace.js'))\nrefractor.register(require('./lang/jexl.js'))\nrefractor.register(require('./lang/jolie.js'))\nrefractor.register(require('./lang/jq.js'))\nrefractor.register(require('./lang/js-extras.js'))\nrefractor.register(require('./lang/js-templates.js'))\nrefractor.register(require('./lang/jsdoc.js'))\nrefractor.register(require('./lang/json.js'))\nrefractor.register(require('./lang/json5.js'))\nrefractor.register(require('./lang/jsonp.js'))\nrefractor.register(require('./lang/jsstacktrace.js'))\nrefractor.register(require('./lang/jsx.js'))\nrefractor.register(require('./lang/julia.js'))\nrefractor.register(require('./lang/keepalived.js'))\nrefractor.register(require('./lang/keyman.js'))\nrefractor.register(require('./lang/kotlin.js'))\nrefractor.register(require('./lang/kumir.js'))\nrefractor.register(require('./lang/kusto.js'))\nrefractor.register(require('./lang/latex.js'))\nrefractor.register(require('./lang/latte.js'))\nrefractor.register(require('./lang/less.js'))\nrefractor.register(require('./lang/lilypond.js'))\nrefractor.register(require('./lang/liquid.js'))\nrefractor.register(require('./lang/lisp.js'))\nrefractor.register(require('./lang/livescript.js'))\nrefractor.register(require('./lang/llvm.js'))\nrefractor.register(require('./lang/log.js'))\nrefractor.register(require('./lang/lolcode.js'))\nrefractor.register(require('./lang/lua.js'))\nrefractor.register(require('./lang/magma.js'))\nrefractor.register(require('./lang/makefile.js'))\nrefractor.register(require('./lang/markdown.js'))\nrefractor.register(require('./lang/markup-templating.js'))\nrefractor.register(require('./lang/matlab.js'))\nrefractor.register(require('./lang/maxscript.js'))\nrefractor.register(require('./lang/mel.js'))\nrefractor.register(require('./lang/mermaid.js'))\nrefractor.register(require('./lang/mizar.js'))\nrefractor.register(require('./lang/mongodb.js'))\nrefractor.register(require('./lang/monkey.js'))\nrefractor.register(require('./lang/moonscript.js'))\nrefractor.register(require('./lang/n1ql.js'))\nrefractor.register(require('./lang/n4js.js'))\nrefractor.register(require('./lang/nand2tetris-hdl.js'))\nrefractor.register(require('./lang/naniscript.js'))\nrefractor.register(require('./lang/nasm.js'))\nrefractor.register(require('./lang/neon.js'))\nrefractor.register(require('./lang/nevod.js'))\nrefractor.register(require('./lang/nginx.js'))\nrefractor.register(require('./lang/nim.js'))\nrefractor.register(require('./lang/nix.js'))\nrefractor.register(require('./lang/nsis.js'))\nrefractor.register(require('./lang/objectivec.js'))\nrefractor.register(require('./lang/ocaml.js'))\nrefractor.register(require('./lang/opencl.js'))\nrefractor.register(require('./lang/openqasm.js'))\nrefractor.register(require('./lang/oz.js'))\nrefractor.register(require('./lang/parigp.js'))\nrefractor.register(require('./lang/parser.js'))\nrefractor.register(require('./lang/pascal.js'))\nrefractor.register(require('./lang/pascaligo.js'))\nrefractor.register(require('./lang/pcaxis.js'))\nrefractor.register(require('./lang/peoplecode.js'))\nrefractor.register(require('./lang/perl.js'))\nrefractor.register(require('./lang/php-extras.js'))\nrefractor.register(require('./lang/php.js'))\nrefractor.register(require('./lang/phpdoc.js'))\nrefractor.register(require('./lang/plsql.js'))\nrefractor.register(require('./lang/powerquery.js'))\nrefractor.register(require('./lang/powershell.js'))\nrefractor.register(require('./lang/processing.js'))\nrefractor.register(require('./lang/prolog.js'))\nrefractor.register(require('./lang/promql.js'))\nrefractor.register(require('./lang/properties.js'))\nrefractor.register(require('./lang/protobuf.js'))\nrefractor.register(require('./lang/psl.js'))\nrefractor.register(require('./lang/pug.js'))\nrefractor.register(require('./lang/puppet.js'))\nrefractor.register(require('./lang/pure.js'))\nrefractor.register(require('./lang/purebasic.js'))\nrefractor.register(require('./lang/purescript.js'))\nrefractor.register(require('./lang/python.js'))\nrefractor.register(require('./lang/q.js'))\nrefractor.register(require('./lang/qml.js'))\nrefractor.register(require('./lang/qore.js'))\nrefractor.register(require('./lang/qsharp.js'))\nrefractor.register(require('./lang/r.js'))\nrefractor.register(require('./lang/racket.js'))\nrefractor.register(require('./lang/reason.js'))\nrefractor.register(require('./lang/regex.js'))\nrefractor.register(require('./lang/rego.js'))\nrefractor.register(require('./lang/renpy.js'))\nrefractor.register(require('./lang/rest.js'))\nrefractor.register(require('./lang/rip.js'))\nrefractor.register(require('./lang/roboconf.js'))\nrefractor.register(require('./lang/robotframework.js'))\nrefractor.register(require('./lang/ruby.js'))\nrefractor.register(require('./lang/rust.js'))\nrefractor.register(require('./lang/sas.js'))\nrefractor.register(require('./lang/sass.js'))\nrefractor.register(require('./lang/scala.js'))\nrefractor.register(require('./lang/scheme.js'))\nrefractor.register(require('./lang/scss.js'))\nrefractor.register(require('./lang/shell-session.js'))\nrefractor.register(require('./lang/smali.js'))\nrefractor.register(require('./lang/smalltalk.js'))\nrefractor.register(require('./lang/smarty.js'))\nrefractor.register(require('./lang/sml.js'))\nrefractor.register(require('./lang/solidity.js'))\nrefractor.register(require('./lang/solution-file.js'))\nrefractor.register(require('./lang/soy.js'))\nrefractor.register(require('./lang/sparql.js'))\nrefractor.register(require('./lang/splunk-spl.js'))\nrefractor.register(require('./lang/sqf.js'))\nrefractor.register(require('./lang/sql.js'))\nrefractor.register(require('./lang/squirrel.js'))\nrefractor.register(require('./lang/stan.js'))\nrefractor.register(require('./lang/stylus.js'))\nrefractor.register(require('./lang/swift.js'))\nrefractor.register(require('./lang/systemd.js'))\nrefractor.register(require('./lang/t4-cs.js'))\nrefractor.register(require('./lang/t4-templating.js'))\nrefractor.register(require('./lang/t4-vb.js'))\nrefractor.register(require('./lang/tap.js'))\nrefractor.register(require('./lang/tcl.js'))\nrefractor.register(require('./lang/textile.js'))\nrefractor.register(require('./lang/toml.js'))\nrefractor.register(require('./lang/tremor.js'))\nrefractor.register(require('./lang/tsx.js'))\nrefractor.register(require('./lang/tt2.js'))\nrefractor.register(require('./lang/turtle.js'))\nrefractor.register(require('./lang/twig.js'))\nrefractor.register(require('./lang/typescript.js'))\nrefractor.register(require('./lang/typoscript.js'))\nrefractor.register(require('./lang/unrealscript.js'))\nrefractor.register(require('./lang/uorazor.js'))\nrefractor.register(require('./lang/uri.js'))\nrefractor.register(require('./lang/v.js'))\nrefractor.register(require('./lang/vala.js'))\nrefractor.register(require('./lang/vbnet.js'))\nrefractor.register(require('./lang/velocity.js'))\nrefractor.register(require('./lang/verilog.js'))\nrefractor.register(require('./lang/vhdl.js'))\nrefractor.register(require('./lang/vim.js'))\nrefractor.register(require('./lang/visual-basic.js'))\nrefractor.register(require('./lang/warpscript.js'))\nrefractor.register(require('./lang/wasm.js'))\nrefractor.register(require('./lang/web-idl.js'))\nrefractor.register(require('./lang/wiki.js'))\nrefractor.register(require('./lang/wolfram.js'))\nrefractor.register(require('./lang/wren.js'))\nrefractor.register(require('./lang/xeora.js'))\nrefractor.register(require('./lang/xml-doc.js'))\nrefractor.register(require('./lang/xojo.js'))\nrefractor.register(require('./lang/xquery.js'))\nrefractor.register(require('./lang/yaml.js'))\nrefractor.register(require('./lang/yang.js'))\nrefractor.register(require('./lang/zig.js'))\n","'use strict'\n\nmodule.exports = abap\nabap.displayName = 'abap'\nabap.aliases = []\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function' // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/,\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = al\nal.displayName = 'al'\nal.aliases = []\nfunction al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i, // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","'use strict'\n\nmodule.exports = antlr4\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","'use strict'\n\nmodule.exports = apacheconf\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = apex\napex.displayName = 'apex'\napex.aliases = []\nfunction apex(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = applescript\napplescript.displayName = 'applescript'\napplescript.aliases = []\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    'class-name':\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = arduino\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\nfunction arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\nfunction asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern:\n          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = asmatmel\nasmatmel.displayName = 'asmatmel'\nasmatmel.aliases = []\nfunction asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&&?|\\|\\|?|[-+*/%&|^!=<>?]=?/,\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = autohotkey\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    selector:\n      /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important:\n      /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","'use strict'\n\nmodule.exports = avisynth\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\nfunction avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /bool|clip|float|int|string|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\n        .source, // control\n      /apply|assert|default|eval|import|nop|select|undefined/.source, // global\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\n        .source, // conv\n      /hex(?:value)?|value/.source, // numeric\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\n        .source, // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source, // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source, // runtime\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source, // script\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\n        .source, // string\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\n        .source, // version\n      /isversionorgreater|version(?:number|string)/.source, // helper\n      /buildpixeltype|colorspacenametopixeltype/.source, // avsplus\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source, // resolution\n      /height|width/.source, // framerate\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source, // interlacing\n      /getparity|is(?:field|frame)based/.source, // color format\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\n        .source, // audio\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\n        .source, // color\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source, // overlay\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source, // geometry\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\n        .source, // pixel\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\n        .source, // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source, // interlace\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\n        .source, // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\n        .source, // conditional\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\n        .source, // export\n      /imagewriter/.source, // debug\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\n      keyword:\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = avroIdl\navroIdl.displayName = 'avroIdl'\navroIdl.aliases = []\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:Infinity|NaN)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","'use strict'\n\nmodule.exports = basic\nbasic.displayName = 'basic'\nbasic.aliases = []\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = bbcode\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\nfunction bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","'use strict'\n\nmodule.exports = birb\nbirb.displayName = 'birb'\nbirb.aliases = []\nfunction birb(Prism) {\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = bnf\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\nfunction bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","'use strict'\n\nmodule.exports = brightscript\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\nfunction brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","'use strict'\n\nmodule.exports = bro\nbro.displayName = 'bro'\nbro.aliases = []\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n      lookbehind: true\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n    constant: {\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = bsl\nbsl.displayName = 'bsl'\nbsl.aliases = []\nfunction bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      }, // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/, // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      }, // EN\n      {\n        pattern: /\\b(?:and|not|or)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^([ \\t]*)&.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }, // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^([ \\t]*)#.*/gm,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","'use strict'\n\nmodule.exports = c\nc.displayName = 'c'\nc.aliases = []\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = cil\ncil.displayName = 'cil'\ncil.aliases = []\nfunction cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    char: /\\\\\\w+/,\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = cmake\ncmake.displayName = 'cmake'\ncmake.aliases = []\nfunction cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n    namespace:\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","'use strict'\n\nmodule.exports = cobol\ncobol.displayName = 'cobol'\ncobol.aliases = []\nfunction cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      inside: {\n        'class-name': /^\\w+/,\n        string: {\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n          lookbehind: true\n        },\n        punctuation: /\\|\\|/\n      }\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    'regex-literal': {\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        regex: /[\\s\\S]+/\n      }\n    },\n    'string-literal': {\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","'use strict'\n\nmodule.exports = coq\ncoq.displayName = 'coq'\ncoq.aliases = []\nfunction coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet', 'cs']\nfunction csharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = cshtml\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\nfunction cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/\n        .source\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' + // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' + // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' + // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')' // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly, // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly, // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly, // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source, // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly, // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*'\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            /(?:await\\b\\s*)?/.source +\n            '(?:' +\n            /\\w+\\b/.source +\n            '|' +\n            round +\n            ')' +\n            '(?:' +\n            /[?!]?\\.\\w+\\b/.source +\n            '|' +\n            round +\n            '|' +\n            square +\n            '|' +\n            angle +\n            round +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'variable',\n        inside: {\n          keyword: /^@/,\n          csharp: cs\n        }\n      },\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csv\ncsv.displayName = 'csv'\ncsv.aliases = []\nfunction csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","'use strict'\n\nmodule.exports = cypher\ncypher.displayName = 'cypher'\ncypher.aliases = []\nfunction cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n              /\\/\\/.*/.source, // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'string', {\n    // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dax\ndax.displayName = 'dax'\ndax.aliases = []\nfunction dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = dhall\ndhall.displayName = 'dhall'\ndhall.aliases = []\nfunction dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:None|Some)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","'use strict'\n\nmodule.exports = editorconfig\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\nfunction editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ejs\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\nfunction ejs(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","'use strict'\n\nmodule.exports = factor\nfactor.displayName = 'factor'\nfactor.aliases = []\nfunction factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        },\n        /* from basis/multiline: */\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable', // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ] // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@', // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index', // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?', // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative', // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot', // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&', // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence' // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = firestoreSecurityRules\nfirestoreSecurityRules.displayName = 'firestoreSecurityRules'\nfirestoreSecurityRules.aliases = []\nfunction firestoreSecurityRules(Prism) {\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = gml\ngml.displayName = 'gml'\ngml.aliases = []\nfunction gml(Prism) {\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","'use strict'\n\nmodule.exports = gn\ngn.displayName = 'gn'\ngn.aliases = ['gni']\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","'use strict'\n\nmodule.exports = goModule\ngoModule.displayName = 'goModule'\ngoModule.aliases = []\nfunction goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          } // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            } // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    string: [\n      {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern:\n          /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true\n      },\n      {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    number:\n      /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+' // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }, // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      }, // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' + // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jexl\njexl.displayName = 'jexl'\njexl.aliases = []\nfunction jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // sql`...`\n      createTemplate('sql', /\\bsql/.source), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = keepalived\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\nfunction keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern: /\\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' + // start of line\n            (/^/.source +\n              '|' + // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' + // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' + // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' + // number\n              /\\d|-\\.?\\d/.source +\n              '|' + // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        } // See rest below\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function:\n      /\\b\\w+(?=\\()|\\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mermaid\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\nfunction mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = mongodb\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\nfunction mongodb(Prism) {\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice', // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit', // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields', // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField', // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = moonscript\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\nfunction moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      }, // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = objectivec\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\nfunction objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","'use strict'\n\nmodule.exports = ocaml\nocaml.displayName = 'ocaml'\nocaml.aliases = []\nfunction ocaml(Prism) {\n  // https://ocaml.org/manual/lex.html\n  Prism.languages.ocaml = {\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n        greedy: true\n      }\n    ],\n    number: [\n      // binary and octal\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n    ],\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'property'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'property'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'symbol'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'operator-like-punctuation': {\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n      alias: 'punctuation'\n    },\n    // Custom operators are allowed\n    operator:\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = opencl\nopencl.displayName = 'opencl'\nopencl.aliases = []\nfunction opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes) // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = openqasm\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\nfunction openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:false|true)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","'use strict'\n\nmodule.exports = peoplecode\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\nfunction peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source, // REM comments\n        /\\bREM[^;]*;/.source, // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source, // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        }, // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        }, // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        }, // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source, // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source, // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }, // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n        /[&*$@%]\\^[A-Z_]/, // ${...}\n        /[&*$@%]#?(?=\\{)/, // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/, // $1\n        /[&*$@%]\\d+/, // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nmodule.exports = phpExtras\nphpExtras.displayName = 'phpExtras'\nphpExtras.aliases = []\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: {\n      pattern: /\\$this\\b/,\n      alias: 'keyword'\n    },\n    global:\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /\\b(?:parent|self|static)\\b/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        }, // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = phpdoc\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\nfunction phpdoc(Prism) {\n  Prism.register(refractorPhp)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = plsql\nplsql.displayName = 'plsql'\nplsql.aliases = []\nfunction plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n      greedy: true\n    },\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n    keyword:\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n  })\n  Prism.languages.insertBefore('plsql', 'operator', {\n    label: {\n      pattern: /<<\\s*\\w+\\s*>>/,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = powerquery\npowerquery.displayName = 'powerquery'\npowerquery.aliases = []\nfunction powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:false|true)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","'use strict'\n\nmodule.exports = powershell\npowershell.displayName = 'powershell'\npowershell.aliases = []\nfunction powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:false|true)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    }) // Variable interpolation inside strings, and nested expressions\n    powershell.string[0].inside = {\n      function: {\n        // Allow for one level of nesting\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: true,\n        inside: powershell\n      },\n      boolean: powershell.boolean,\n      variable: powershell.variable\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = promql\npromql.displayName = 'promql'\npromql.aliases = []\nfunction promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ] // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ] // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = properties\nproperties.displayName = 'properties'\nproperties.aliases = []\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n    punctuation: /[=:]/\n  }\n}\n","'use strict'\n\nmodule.exports = protobuf\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\nfunction protobuf(Prism) {\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = psl\npsl.displayName = 'psl'\npsl.aliases = []\nfunction psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","'use strict'\n\nmodule.exports = pug\npug.displayName = 'pug'\npug.aliases = []\nfunction pug(Prism) {\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          text: /\\S[\\s\\S]*/\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        }, // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            text: {\n              pattern: /\\S[\\s\\S]*/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pure\npure.displayName = 'pure'\npure.aliases = []\nfunction pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    }) // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = purebasic\npurebasic.displayName = 'purebasic'\npurebasic.aliases = []\nfunction purebasic(Prism) {\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n        ],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = purescript\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\nfunction purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0], // ASCII operators\n      Prism.languages.haskell.operator[2], // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = ['py']\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = qsharp\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\nfunction qsharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    ) // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    }) // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = racket\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\nfunction racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rego\nrego.displayName = 'rego'\nrego.aliases = []\nfunction rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","'use strict'\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rust\nrust.displayName = 'rust'\nrust.aliases = []\nfunction rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>':\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      } // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' + // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' + // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' + // shell symbol\n            /[$#%](?=\\s)/.source + // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    ) // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sml\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\nfunction sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = solidity\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\nfunction solidity(Prism) {\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","'use strict'\n\nmodule.exports = solutionFile\nsolutionFile.displayName = 'solutionFile'\nsolutionFile.aliases = []\nfunction solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorTurtle = require('./turtle.js')\nmodule.exports = sparql\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\nfunction sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","'use strict'\n\nmodule.exports = splunkSpl\nsplunkSpl.displayName = 'splunkSpl'\nsplunkSpl.aliases = []\nfunction splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = sqf\nsqf.displayName = 'sqf'\nsqf.aliases = []\nfunction sqf(Prism) {\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","'use strict'\n\nmodule.exports = sql\nsql.displayName = 'sql'\nsql.aliases = []\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = squirrel\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'string', {\n    char: {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","'use strict'\n\nmodule.exports = systemd\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\nfunction systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' + // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' + // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      punctuation: /=/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = t4Cs\nt4Cs.displayName = 't4Cs'\nt4Cs.aliases = []\nfunction t4Cs(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorCsharp)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorVbnet = require('./vbnet.js')\nmodule.exports = t4Vb\nt4Vb.displayName = 't4Vb'\nt4Vb.aliases = []\nfunction t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = tremor\ntremor.displayName = 'tremor'\ntremor.aliases = []\nfunction tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = turtle\nturtle.displayName = 'turtle'\nturtle.aliases = []\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n","'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = unrealscript\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\nfunction unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","'use strict'\n\nmodule.exports = uorazor\nuorazor.displayName = 'uorazor'\nuorazor.aliases = []\nfunction uorazor(Prism) {\n  Prism.languages.uorazor = {\n    'comment-hash': {\n      pattern: /#.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    'comment-slash': {\n      pattern: /\\/\\/.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      },\n      greedy: true\n    },\n    'source-layers': {\n      pattern:\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n      alias: 'function'\n    },\n    'source-commands': {\n      pattern:\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n      alias: 'function'\n    },\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    function:\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n    keyword:\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n}\n","'use strict'\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","'use strict'\n\nmodule.exports = v\nv.displayName = 'v'\nv.aliases = []\nfunction v(Prism) {\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorBasic = require('./basic.js')\nmodule.exports = vbnet\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'kernel-function': {\n      // support for any kernel function (ex: $display())\n      pattern: /\\B\\$\\w+\\b/,\n      alias: 'property'\n    },\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vhdl\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:library|use)\\b/i,\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vim\nvim.displayName = 'vim'\nvim.aliases = []\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = visualBasic\nvisualBasic.displayName = 'visualBasic'\nvisualBasic.aliases = []\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'property',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n      alias: 'number'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","'use strict'\n\nmodule.exports = warpscript\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\nfunction warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:F|T|false|true)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = webIdl\nwebIdl.displayName = 'webIdl'\nwebIdl.aliases = []\nfunction webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        }, // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/, // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = wiki\nwiki.displayName = 'wiki'\nwiki.aliases = []\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/, // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = wolfram\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'wl', 'nb']\nfunction wolfram(Prism) {\n  Prism.languages.wolfram = {\n    // Allow one level of nesting - note: regex taken from applescipt\n    comment: /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\b\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\^|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","'use strict'\n\nmodule.exports = wren\nwren.displayName = 'wren'\nwren.aliases = []\nfunction wren(Prism) {\n  // https://wren.io/\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      }, // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    directive: {\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n      alias: 'property'\n    },\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = xquery\nxquery.displayName = 'xquery'\nxquery.aliases = []\nfunction xquery(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    } // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' && // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yang\nyang.displayName = 'yang'\nyang.aliases = []\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","'use strict'\n\nmodule.exports = zig\nzig.displayName = 'zig'\nzig.aliases = []\nfunction zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/\\/[/!].*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      char: {\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n        pattern:\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n        lookbehind: true,\n        greedy: true\n      },\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      'builtin-type': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n"],"names":["module","exports","__webpack_require__","highlighter","highlight","Z","refractor_default","supportedLanguages","esm_prism","refractor","register","abap","Prism","languages","comment","string","pattern","lookbehind","alias","keyword","number","operator","punctuation","displayName","aliases","abnf","coreRules","greedy","inside","range","terminal","repetition","definition","RegExp","rule","actionscript","extend","markup","insertBefore","xml","ada","boolean","char","variable","agda","function","al","antlr4","escape","action","content","command","annotation","label","constant","g4","apacheconf","regex","refractorSql","apex","keywords","className","source","replace","insertClassName","classNameInside","clike","sql","trigger","apl","statement","assignment","dfn","applescript","aql","property","identifier","refractorCpp","arduino","builtin","ino","arff","asciidoc","attributes","quoted","interpreted","table","specifiers","title","hr","admonition","callout","macro","inline","url","italic","bold","replacement","entity","copyFromAsciiDoc","keys","split","o","i","l","length","rest","hooks","add","env","type","value","adoc","asm6502","directive","asmatmel","refractorCsharp","aspnet","tag","csharp","javascript","autohotkey","selector","symbol","important","autoit","avisynth","re","replacements","flags","m","index","types","allinternals","join","argument","avs","avroIdl","avdl","basic","batch","parameter","bbcode","shortcode","bicep","interpolation","expression","datatype","decorator","birb","metadata","refractorC","bison","c","delimiter","bnf","rbnf","brainfuck","pointer","increment","decrement","branching","brightscript","bro","bsl","oscript","cfscript","scope","cfc","chaiscript","cpp","cil","clojure","cmake","namespace","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","coq","commentSource","attribute","punct","modName","generic","refractorRuby","crystal","ruby","args","expansion","nested","depthLog2","keywordKinds","typeDeclaration","contextual","other","keywordsToPattern","words","trim","typeDeclarationKeywords","nonTypeKeywords","nonContextualKeywords","nestedRound","name","genericName","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","target","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","cshtml","commentLike","stringLike","round","square","curly","angle","tagAttrs","tagContent","tagRegion","html","block","razor","csp","scheme","none","nonce","hash","host","cssExtras","selectorInside","css","class","id","combinator","unit","hexcode","color","csv","cypher","relationship","d","dart","packagePrefix","undefined","generics","dataweave","date","dax","measure","dhall","diff","PREFIXES","coord","Object","unchanged","forEach","prefix","test","push","exec","line","defineProperty","refractorMarkupTemplating","django","markupTemplating","filter","buildPlaceholders","tokenizePlaceholders","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","space","option","stringRule","commentRule","instruction","options","dockerfile","dot","ID","IDInside","withID","node","gv","ebnf","special","editorconfig","section","key","eiffel","ejs","eta","elixir","doc","atom","elm","hvariable","erb","erlang","refractorLua","etlua","lua","excelFormula","reference","sheet","file","path","cell","column","row","factor","comment_inside","string_inside","arrToWordsRegExp","builtins","regexp","combinators","str","arr","map","k","$false","firestoreSecurityRules","method","flow","Array","isArray","unshift","fortran","fsharp","ftl","FTL_EXPR","gap","shell","continuation","gcode","checksum","gdscript","gedcom","gherkin","tableRow","pystring","feature","scenario","outline","td","th","atrule","git","deleted","glsl","gml","gamemakerlanguage","gn","gni","goModule","version","go","graphql","description","markdown","scalar","fragment","object","language","validTokens","tokens","token","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","open","close","stackHeight","groovy","shebang","classes","haml","doctype","code","filters","all_filters","filter_pattern","text","handlebars","brackets","hbs","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","http","headerValueOf","uri","header","langs","httpLanguages","json","plain","suffixTypes","contentType","getSuffixPattern","suffix","ichigojam","icon","icuMessageFormat","stringPattern","argumentSource","nestedMessage","message","refractorHaskell","idris","idr","iecst","address","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","verb","position","ini","io","j","adverb","conjunction","java","classNamePrefix","refractorJava","refractorJavadoclike","javadoc","codeLinePattern","memberReference","field","javadoclike","addSupport","javaDocLike","docLanguage","lang","docCommentSupport","callback","tokenName","grammar","javastacktrace","summary","exceptions","more","jexl","transform","jolie","aggregates","redirects","jq","stringInterpolation","jsExtras","withId","imports","spread","arrow","dom","console","maybeClassNameTokens","util","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","tokenizeWithHooks","run","tokenize","Boolean","js","typescript","ts","jsx","tsx","findTemplateStrings","embedded","stringContent","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","counter","placeholder","interpolationExpression","toUpperCase","placeholders","walkTokens","s","before","substring","middle","tokenizeInterpolationExpression","tempGrammar","apply","splice","Token","after","afterTokens","concat","refractorTypescript","jsdoc","parameterPrefix","example","refractorJson","json5","jsonp","jsstacktrace","filename","julia","keepalived","ip","email","keyman","kotlin","interpolationInside","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","cdata","equation","headline","tex","context","refractorPhp","latte","markupLatte","php","less","refractorScheme","lilypond","schemeExpression","ly","liquid","empty","insideRaw","match","tagMatch","lisp","simple_form","primitive","marker","par","nestedPar","heading","declare","interactive","defvar","defun","arguments","lambda","car","arg","varform","forms","arglist","clone","sublist","elisp","emacs","livescript","llvm","log","exception","separator","domain","uuid","time","lolcode","magma","output","generator","makefile","getPlaceholder","defineProperties","placeholderPattern","replaceFilter","tokenStack","matlab","maxscript","mel","flag","mermaid","style","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd","nand2tetrisHdl","naniscript","expressionDef","params","define","nani","getTextContent","isBracketsBalanced","input","stack","bracket","bracketsIndex","pop","nasm","neon","null","literal","nevod","fields","search","quantifier","colon","nginx","nim","nix","antiquotation","nsis","objectivec","objc","ocaml","variant","opencl","openqasm","qasm","oz","parigp","parser","pascal","asm","objectpascal","pascaligo","braces","reduce","accum","p","pcaxis","tlist","px","peoplecode","pcode","perl","filehandle","phpExtras","this","global","string_interpolation","package","phpdoc","plsql","powerquery","pq","mscript","powershell","processing","promql","vectorMatching","aggregations","properties","protobuf","builtinTypes","psl","pug","each","branch","mixin","puppet","pure","inlineLanguageRe","inlineLanguages","purebasic","pbfasm","purescript","purs","python","py","q","qml","jsString","jsComment","jsExpr","qore","qsharp","qualifiedName","interpolationExpr","qs","r","ellipsis","racket","rkt","reason","constructor","specialEscape","rangeChar","groupName","backreference","anchor","group","alternation","rego","renpy","rpy","role","link","rip","roboconf","component","optional","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","settings","documentation","variables","tasks","robot","percentExpression","symbolName","rb","rust","multilineComment","sas","numericConstant","macroVariable","macroKeyword","step","func","format","altformat","globalStatements","submitStatement","actionSets","casActions","equals","datalines","sass","scala","SortedBNF","refractorBash","shellSession","strings","info","user","bash","smali","smalltalk","smarty","smartyPattern","smartyLiteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","refractorTurtle","sparql","rq","splunkSpl","sqf","squirrel","stan","higherOrderFunctions","constraint","stylus","swift","nil","omit","systemd","quotesSource","refractorT4Templating","t4Cs","t4","createT4","t4Templating","createBlock","contentAlias","insideLang","standard","refractorVbnet","t4Vb","refractorYaml","tap","fail","pass","pragma","bailout","plan","subtest","yamlish","yaml","tcl","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","list","cite","span","image","footnote","acronym","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","toml","insertKey","tremor","extractor","troy","trickle","tt2","turtle","trig","twig","typoscript","tsconfig","unrealscript","category","uc","uscript","uorazor","query","pair","authority","port","v","vala","refractorBasic","vbnet","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","webIdl","wiki","emphasis","nowiki","wolfram","blank","mathematica","wl","nb","wren","hashbang","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","xojo","xquery","extension","axis","stringifyToken","openedTags","notTagNorBrace","tagName","openedBraces","plainText","anchorOrAlias","plainKey","createValuePattern","yml","yang","zig","IDENTIFIER","ALIGN","TYPE","obj"],"sourceRoot":""}